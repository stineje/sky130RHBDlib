**S8 Vgs Vds Vbs Check File 
************************
.param
************************
*
+n20vhv1_vbs_min_1 = '-2.501'
+n20vhv1_vbs_max_1 = '0.001'
+n20vhv1_tmax_vbs_1 = '20.001n'
+n20vhv1_vbs_min = '-2.501'
+n20vhv1_vbs_max = '0.001'
+n20vhv1_vds_min_1 = '-0.001'
+n20vhv1_vds_max_1 = '24.501'
+n20vhv1_tmax_vds_1 = '100.001n'
+n20vhv1_vds_min_2 = '-0.001'
+n20vhv1_vds_max_2 = '30.001'
+n20vhv1_tmax_vds_2 = '25.001n'
+n20vhv1_vds_min = '-0.001'
+n20vhv1_vds_max = '36'
+n20vhv1_vbd_min_1 = 'n20vhv1_vbs_min - n20vhv1_vds_max_1'
+n20vhv1_vbd_max_1 = 'n20vhv1_vbs_max'
+n20vhv1_tmax_vbd_1 = '100.001n'
+n20vhv1_vbd_min_2 = 'n20vhv1_vbs_min - n20vhv1_vds_max_2'
+n20vhv1_vbd_max_2 = 'n20vhv1_vbs_max'
+n20vhv1_tmax_vbd_2 = '25.001n'
+n20vhv1_vbd_min = 'n20vhv1_vbs_min - n20vhv1_vds_max'
+n20vhv1_vbd_max = 'n20vhv1_vbs_max'
+n20vhv1_vgs_min_1 = '-1*5.751'
+n20vhv1_vgs_max_1 = '5.751'
+n20vhv1_tmax_vgs_1 = '100.001n'
+n20vhv1_vgs_min_2 = '-1*6.001'
+n20vhv1_vgs_max_2 = '6.001'
+n20vhv1_tmax_vgs_2 = '20.001n'
+n20vhv1_vgs_min = '-1*6.501'
+n20vhv1_vgs_max = '6.501'
+n20vhv1_vgd_min_1 = '-1*n20vhv1_vds_max_1'
+n20vhv1_vgd_max_1 = 'n20vhv1_vgs_max_1'
+n20vhv1_tmax_vgd_1 = 'n20vhv1_tmax_vds_1'
+n20vhv1_vgd_min_2 = '-1*n20vhv1_vds_max_2'
+n20vhv1_vgd_max_2 = 'n20vhv1_vgs_max_2'
+n20vhv1_tmax_vgd_2 = 'n20vhv1_tmax_vds_2'
+n20vhv1_vgd_min = '-1*n20vhv1_vds_max'
+n20vhv1_vgd_max = 'n20vhv1_vgs_max'
+n20vhv1_vgb_min_1 = '0 - 2.5'
+n20vhv1_vgb_max_1 = 'n20vhv1_vgs_max_1 - n20vhv1_vbs_min_1'
+n20vhv1_tmax_vgb_1 = '100.001n'
+n20vhv1_vgb_min_2 = '0 - 2.5'
+n20vhv1_vgb_max_2 = 'n20vhv1_vgs_max_2 - n20vhv1_vbs_min_1'
+n20vhv1_tmax_vgb_2 = '20.001n'
+n20vhv1_vgb_min = '-1*n20vhv1_vgs_max'
+n20vhv1_vgb_max = 'n20vhv1_vgs_max - n20vhv1_vbs_min'
+n20vhv1_vtx = '0.623'
*
+n20vhviso1_vbs_min_1 = '-2.501'
+n20vhviso1_vbs_max_1 = '0.001'
+n20vhviso1_tmax_vbs_1 = '20.001n'
+n20vhviso1_vbs_min = '-2.501'
+n20vhviso1_vbs_max = '0.001'
+n20vhviso1_vds_min_1 = '-0.001'
+n20vhviso1_vds_max_1 = '22.001'
+n20vhviso1_tmax_vds_1 = '100.001n'
+n20vhviso1_vds_min_2 = '-0.001'
+n20vhviso1_vds_max_2 = '22.001'
+n20vhviso1_tmax_vds_2 = '25.001n'
+n20vhviso1_vds_min = '-0.001'
+n20vhviso1_vds_max = '22.501'
+n20vhviso1_vbd_min_1 = 'n20vhviso1_vbs_min - n20vhviso1_vds_max_1'
+n20vhviso1_vbd_max_1 = 'n20vhviso1_vbs_max'
+n20vhviso1_tmax_vbd_1 = '100.001n'
+n20vhviso1_vbd_min_2 = 'n20vhviso1_vbs_min - n20vhviso1_vds_max_2'
+n20vhviso1_vbd_max_2 = 'n20vhviso1_vbs_max'
+n20vhviso1_tmax_vbd_2 = '25.001n'
+n20vhviso1_vbd_min = 'n20vhviso1_vbs_min - n20vhviso1_vds_max'
+n20vhviso1_vbd_max = 'n20vhviso1_vbs_max'
+n20vhviso1_vgs_min_1 = '-1*5.751'
+n20vhviso1_vgs_max_1 = '5.751'
+n20vhviso1_tmax_vgs_1 = '100.001n'
+n20vhviso1_vgs_min_2 = '-1*6.001'
+n20vhviso1_vgs_max_2 = '6.001'
+n20vhviso1_tmax_vgs_2 = '20.001n'
+n20vhviso1_vgs_min = '-1*6.501'
+n20vhviso1_vgs_max = '6.501'
+n20vhviso1_vgd_min_1 = '-1*n20vhviso1_vds_max_1'
+n20vhviso1_vgd_max_1 = 'n20vhviso1_vgs_max_1'
+n20vhviso1_tmax_vgd_1 = 'n20vhviso1_tmax_vds_1'
+n20vhviso1_vgd_min_2 = '-1*n20vhviso1_vds_max_2'
+n20vhviso1_vgd_max_2 = 'n20vhviso1_vgs_max_2'
+n20vhviso1_tmax_vgd_2 = 'n20vhviso1_tmax_vds_2'
+n20vhviso1_vgd_min = '-1*n20vhviso1_vds_max'
+n20vhviso1_vgd_max = 'n20vhviso1_vgs_max'
+n20vhviso1_vgb_min_1 = '0 - 2.5'
+n20vhviso1_vgb_max_1 = 'n20vhviso1_vgs_max_1 - n20vhviso1_vbs_min_1'
+n20vhviso1_tmax_vgb_1 = '100.001n'
+n20vhviso1_vgb_min_2 = '0 - 2.5'
+n20vhviso1_vgb_max_2 = 'n20vhviso1_vgs_max_2 - n20vhviso1_vbs_min_1'
+n20vhviso1_tmax_vgb_2 = '20.001n'
+n20vhviso1_vgb_min = '-1*n20vhviso1_vgs_max'
+n20vhviso1_vgb_max = 'n20vhviso1_vgs_max - n20vhviso1_vbs_min'
+n20vhviso1_vtx = '0.617'
*
+n20nativevhviso1_vbs_min_1 = '-2.501'
+n20nativevhviso1_vbs_max_1 = '0.001'
+n20nativevhviso1_tmax_vbs_1 = '20.001n'
+n20nativevhviso1_vbs_min = '-2.501'
+n20nativevhviso1_vbs_max = '0.001'
+n20nativevhviso1_vds_min_1 = '-0.001'
+n20nativevhviso1_vds_max_1 = '22.001'
+n20nativevhviso1_tmax_vds_1 = '100.001n'
+n20nativevhviso1_vds_min_2 = '-0.001'
+n20nativevhviso1_vds_max_2 = '22.001'
+n20nativevhviso1_tmax_vds_2 = '25.001n'
+n20nativevhviso1_vds_min = '-0.001'
+n20nativevhviso1_vds_max = '22.501'
+n20nativevhviso1_vbd_min_1 = 'n20nativevhviso1_vbs_min - n20nativevhviso1_vds_max_1'
+n20nativevhviso1_vbd_max_1 = 'n20nativevhviso1_vbs_max'
+n20nativevhviso1_tmax_vbd_1 = '100.001n'
+n20nativevhviso1_vbd_min_2 = 'n20nativevhviso1_vbs_min - n20nativevhviso1_vds_max_2'
+n20nativevhviso1_vbd_max_2 = 'n20nativevhviso1_vbs_max'
+n20nativevhviso1_tmax_vbd_2 = '25.001n'
+n20nativevhviso1_vbd_min = 'n20nativevhviso1_vbs_min - n20nativevhviso1_vds_max'
+n20nativevhviso1_vbd_max = 'n20nativevhviso1_vbs_max'
+n20nativevhviso1_vgs_min_1 = '-1*5.751'
+n20nativevhviso1_vgs_max_1 = '5.751'
+n20nativevhviso1_tmax_vgs_1 = '100.001n'
+n20nativevhviso1_vgs_min_2 = '-1*6.001'
+n20nativevhviso1_vgs_max_2 = '6.001'
+n20nativevhviso1_tmax_vgs_2 = '20.001n'
+n20nativevhviso1_vgs_min = '-1*6.501'
+n20nativevhviso1_vgs_max = '6.501'
+n20nativevhviso1_vgd_min_1 = '-1*n20nativevhviso1_vds_max_1'
+n20nativevhviso1_vgd_max_1 = 'n20nativevhviso1_vgs_max_1'
+n20nativevhviso1_tmax_vgd_1 = 'n20nativevhviso1_tmax_vds_1'
+n20nativevhviso1_vgd_min_2 = '-1*n20nativevhviso1_vds_max_2'
+n20nativevhviso1_vgd_max_2 = 'n20nativevhviso1_vgs_max_2'
+n20nativevhviso1_tmax_vgd_2 = 'n20nativevhviso1_tmax_vds_2'
+n20nativevhviso1_vgd_min = '-1*n20nativevhviso1_vds_max'
+n20nativevhviso1_vgd_max = 'n20nativevhviso1_vgs_max'
+n20nativevhviso1_vgb_min_1 = '0 - 2.5'
+n20nativevhviso1_vgb_max_1 = 'n20nativevhviso1_vgs_max_1 - n20nativevhviso1_vbs_min_1'
+n20nativevhviso1_tmax_vgb_1 = '100.001n'
+n20nativevhviso1_vgb_min_2 = '0 - 2.5'
+n20nativevhviso1_vgb_max_2 = 'n20nativevhviso1_vgs_max_2 - n20nativevhviso1_vbs_min_1'
+n20nativevhviso1_tmax_vgb_2 = '20.001n'
+n20nativevhviso1_vgb_min = '-1*n20nativevhviso1_vgs_max'
+n20nativevhviso1_vgb_max = 'n20nativevhviso1_vgs_max - n20nativevhviso1_vbs_min'
+n20nativevhviso1_vtx = '0.02'
*
+p20vhv1_vbs_min_1 = '-0.001'
+p20vhv1_vbs_max_1 = '2.501'
+p20vhv1_tmax_vbs_1 = '20.001n'
+p20vhv1_vbs_min = '-0.001'
+p20vhv1_vbs_max = '2.501'
+p20vhv1_vds_min_1 = '-24.501'
+p20vhv1_vds_max_1 = '0.01'
+p20vhv1_tmax_vds_1 = '100.001n'
+p20vhv1_vds_min_2 = '-24.501'
+p20vhv1_vds_max_2 = '0.01'
+p20vhv1_tmax_vds_2 = '25.001n'
+p20vhv1_vds_min = '-28.001'
+p20vhv1_vds_max = '0.01'
+p20vhv1_vbd_min_1 = 'p20vhv1_vbs_min'
+p20vhv1_vbd_max_1 = 'p20vhv1_vbs_max - p20vhv1_vds_min_1'
+p20vhv1_tmax_vbd_1 = '100.001n'
+p20vhv1_vbd_min_2 = 'p20vhv1_vbs_min'
+p20vhv1_vbd_max_2 = 'p20vhv1_vbs_max - p20vhv1_vds_min_2'
+p20vhv1_tmax_vbd_2 = '25.001n'
+p20vhv1_vbd_min = 'p20vhv1_vbs_min'
+p20vhv1_vbd_max = 'p20vhv1_vbs_max - p20vhv1_vds_min'
+p20vhv1_vgs_min_1 = '-5.751'
+p20vhv1_vgs_max_1 = '-1*-5.751'
+p20vhv1_tmax_vgs_1 = '100.001n'
+p20vhv1_vgs_min_2 = '-6.001'
+p20vhv1_vgs_max_2 = '-1*-6.001'
+p20vhv1_tmax_vgs_2 = '20.001n'
+p20vhv1_vgs_min = '-6.501'
+p20vhv1_vgs_max = '-1*-6.501'
+p20vhv1_vgd_min_1 = 'p20vhv1_vgs_min_1'
+p20vhv1_vgd_max_1 = '-1*p20vhv1_vds_min_1'
+p20vhv1_tmax_vgd_1 = 'p20vhv1_tmax_vds_1'
+p20vhv1_vgd_min_2 = 'p20vhv1_vgs_min_2'
+p20vhv1_vgd_max_2 = '-1*p20vhv1_vds_min_2'
+p20vhv1_tmax_vgd_2 = 'p20vhv1_tmax_vds_2'
+p20vhv1_vgd_min = 'p20vhv1_vgs_min'
+p20vhv1_vgd_max = '-1*p20vhv1_vds_min'
+p20vhv1_vgb_min_1 = 'p20vhv1_vgs_min_1 - p20vhv1_vbs_max_1'
+p20vhv1_vgb_max_1 = '0 + 1.0'
+p20vhv1_tmax_vgb_1 = '100.001n'
+p20vhv1_vgb_min_2 = 'p20vhv1_vgs_min_2 - p20vhv1_vbs_max_1'
+p20vhv1_vgb_max_2 = '0 + 1.0'
+p20vhv1_tmax_vgb_2 = '20.001n'
+p20vhv1_vgb_min = 'p20vhv1_vgs_min - p20vhv1_vbs_max'
+p20vhv1_vgb_max = '-1*p20vhv1_vgs_min'
+p20vhv1_vtx = '-0.873'
*
+n20nativevhv1_vbs_min_1 = '-2.501'
+n20nativevhv1_vbs_max_1 = '0.001'
+n20nativevhv1_tmax_vbs_1 = '20.001n'
+n20nativevhv1_vbs_min = '-2.501'
+n20nativevhv1_vbs_max = '0.001'
+n20nativevhv1_vds_min_1 = '-0.001'
+n20nativevhv1_vds_max_1 = '24.501'
+n20nativevhv1_tmax_vds_1 = '100.001n'
+n20nativevhv1_vds_min_2 = '-0.001'
+n20nativevhv1_vds_max_2 = '30.001'
+n20nativevhv1_tmax_vds_2 = '25.001n'
+n20nativevhv1_vds_min = '-0.001'
+n20nativevhv1_vds_max = '36'
+n20nativevhv1_vbd_min_1 = 'n20nativevhv1_vbs_min - n20nativevhv1_vds_max_1'
+n20nativevhv1_vbd_max_1 = 'n20nativevhv1_vbs_max'
+n20nativevhv1_tmax_vbd_1 = '100.001n'
+n20nativevhv1_vbd_min_2 = 'n20nativevhv1_vbs_min - n20nativevhv1_vds_max_2'
+n20nativevhv1_vbd_max_2 = 'n20nativevhv1_vbs_max'
+n20nativevhv1_tmax_vbd_2 = '25.001n'
+n20nativevhv1_vbd_min = 'n20nativevhv1_vbs_min - n20nativevhv1_vds_max'
+n20nativevhv1_vbd_max = 'n20nativevhv1_vbs_max'
+n20nativevhv1_vgs_min_1 = '-1*5.751'
+n20nativevhv1_vgs_max_1 = '5.751'
+n20nativevhv1_tmax_vgs_1 = '100.001n'
+n20nativevhv1_vgs_min_2 = '-1*6.001'
+n20nativevhv1_vgs_max_2 = '6.001'
+n20nativevhv1_tmax_vgs_2 = '20.001n'
+n20nativevhv1_vgs_min = '-1*6.501'
+n20nativevhv1_vgs_max = '6.501'
+n20nativevhv1_vgd_min_1 = '-1*n20nativevhv1_vds_max_1'
+n20nativevhv1_vgd_max_1 = 'n20nativevhv1_vgs_max_1'
+n20nativevhv1_tmax_vgd_1 = 'n20nativevhv1_tmax_vds_1'
+n20nativevhv1_vgd_min_2 = '-1*n20nativevhv1_vds_max_2'
+n20nativevhv1_vgd_max_2 = 'n20nativevhv1_vgs_max_2'
+n20nativevhv1_tmax_vgd_2 = 'n20nativevhv1_tmax_vds_2'
+n20nativevhv1_vgd_min = '-1*n20nativevhv1_vds_max'
+n20nativevhv1_vgd_max = 'n20nativevhv1_vgs_max'
+n20nativevhv1_vgb_min_1 = '0 - 2.5'
+n20nativevhv1_vgb_max_1 = 'n20nativevhv1_vgs_max_1 - n20nativevhv1_vbs_min_1'
+n20nativevhv1_tmax_vgb_1 = '100.001n'
+n20nativevhv1_vgb_min_2 = '0 - 2.5'
+n20nativevhv1_vgb_max_2 = 'n20nativevhv1_vgs_max_2 - n20nativevhv1_vbs_min_1'
+n20nativevhv1_tmax_vgb_2 = '20.001n'
+n20nativevhv1_vgb_min = '-1*n20nativevhv1_vgs_max'
+n20nativevhv1_vgb_max = 'n20nativevhv1_vgs_max - n20nativevhv1_vbs_min'
+n20nativevhv1_vtx = '0.020'
*
+n20zvtvhv1_vbs_min_1 = '-2.501'
+n20zvtvhv1_vbs_max_1 = '0.001'
+n20zvtvhv1_tmax_vbs_1 = '20.001n'
+n20zvtvhv1_vbs_min = '-2.501'
+n20zvtvhv1_vbs_max = '0.001'
+n20zvtvhv1_vds_min_1 = '-0.001'
+n20zvtvhv1_vds_max_1 = '24.501'
+n20zvtvhv1_tmax_vds_1 = '100.001n'
+n20zvtvhv1_vds_min_2 = '-0.001'
+n20zvtvhv1_vds_max_2 = '28.001'
+n20zvtvhv1_tmax_vds_2 = '25.001n'
+n20zvtvhv1_vds_min = '-0.001'
+n20zvtvhv1_vds_max = '30.001'
+n20zvtvhv1_vbd_min_1 = 'n20zvtvhv1_vbs_min - n20zvtvhv1_vds_max_1'
+n20zvtvhv1_vbd_max_1 = 'n20zvtvhv1_vbs_max'
+n20zvtvhv1_tmax_vbd_1 = '100.001n'
+n20zvtvhv1_vbd_min_2 = 'n20zvtvhv1_vbs_min - n20zvtvhv1_vds_max_2'
+n20zvtvhv1_vbd_max_2 = 'n20zvtvhv1_vbs_max'
+n20zvtvhv1_tmax_vbd_2 = '25.001n'
+n20zvtvhv1_vbd_min = 'n20zvtvhv1_vbs_min - n20zvtvhv1_vds_max'
+n20zvtvhv1_vbd_max = 'n20zvtvhv1_vbs_max'
+n20zvtvhv1_vgs_min_1 = '-1*5.751'
+n20zvtvhv1_vgs_max_1 = '5.751'
+n20zvtvhv1_tmax_vgs_1 = '100.001n'
+n20zvtvhv1_vgs_min_2 = '-1*6.001'
+n20zvtvhv1_vgs_max_2 = '6.001'
+n20zvtvhv1_tmax_vgs_2 = '20.001n'
+n20zvtvhv1_vgs_min = '-1*6.501'
+n20zvtvhv1_vgs_max = '6.501'
+n20zvtvhv1_vgd_min_1 = '-1*n20zvtvhv1_vds_max_1'
+n20zvtvhv1_vgd_max_1 = 'n20zvtvhv1_vgs_max_1'
+n20zvtvhv1_tmax_vgd_1 = 'n20zvtvhv1_tmax_vds_1'
+n20zvtvhv1_vgd_min_2 = '-1*n20zvtvhv1_vds_max_2'
+n20zvtvhv1_vgd_max_2 = 'n20zvtvhv1_vgs_max_2'
+n20zvtvhv1_tmax_vgd_2 = 'n20zvtvhv1_tmax_vds_2'
+n20zvtvhv1_vgd_min = '-1*n20zvtvhv1_vds_max'
+n20zvtvhv1_vgd_max = 'n20zvtvhv1_vgs_max'
+n20zvtvhv1_vgb_min_1 = '0 - 2.5'
+n20zvtvhv1_vgb_max_1 = 'n20zvtvhv1_vgs_max_1 - n20zvtvhv1_vbs_min_1'
+n20zvtvhv1_tmax_vgb_1 = '100.001n'
+n20zvtvhv1_vgb_min_2 = '0 - 2.5'
+n20zvtvhv1_vgb_max_2 = 'n20zvtvhv1_vgs_max_2 - n20zvtvhv1_vbs_min_1'
+n20zvtvhv1_tmax_vgb_2 = '20.001n'
+n20zvtvhv1_vgb_min = '-1*n20zvtvhv1_vgs_max'
+n20zvtvhv1_vgb_max = 'n20zvtvhv1_vgs_max - n20zvtvhv1_vbs_min'
+n20zvtvhv1_vtx = '-0.223'
+n20zvtvhv1_vgs_min_model01 = '-1*3.0'
+n20zvtvhv1_vgs_max_model01 = '1*3.0'
+n20zvtvhv1_vds_min_model01 = '-1*3.0'
+n20zvtvhv1_vds_max_model01 = '1*3.0'
+n20zvtvhv1_tmax_vgs_model01 = '0.001n'
***** n20vhv1 VD >= VS CHECKS *****NOTE: NVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: n20vhv1 Vds for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20vhv1_vtx))  THEN v(d,s) = (n20vhv1_vds_min_1, n20vhv1_vds_max_1, n20vhv1_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: n20vhv1 Vds for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20vhv1_vtx))  THEN v(d,s) = (n20vhv1_vds_min_2, n20vhv1_vds_max_2, n20vhv1_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS:   n20vhv1 Vds for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0)  THEN v(d,s) = (n20vhv1_vds_min, n20vhv1_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: n20vhv1 Vbs for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0) THEN v(b,s)=(n20vhv1_vbs_min_1, n20vhv1_vbs_max_1, n20vhv1_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS:   n20vhv1 Vbs for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0) THEN v(b,s)=(n20vhv1_vbs_min, n20vhv1_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD_1: n20vhv1 Vbd for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20vhv1_vtx)) THEN v(b,d)=(n20vhv1_vbd_min_1, n20vhv1_vbd_max_1, n20vhv1_tmax_vbd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD:   n20vhv1 Vbd for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0) THEN v(b,d)=(n20vhv1_vbd_min, n20vhv1_vbd_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_1: n20vhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20vhv1_vgb_min_1, n20vhv1_vgb_max_1, n20vhv1_tmax_vgb_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_2: n20vhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20vhv1_vgb_min_2, n20vhv1_vgb_max_2, n20vhv1_tmax_vgb_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB:   n20vhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20vhv1_vgb_min, n20vhv1_vgb_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: n20vhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20vhv1_vtx)) THEN v(g,s) = (n20vhv1_vgs_min_1, n20vhv1_vgs_max_1, n20vhv1_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: n20vhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20vhv1_vtx)) THEN v(g,s) = (n20vhv1_vgs_min_2, n20vhv1_vgs_max_2, n20vhv1_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: n20vhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) && (v(g,s) >= n20vhv1_vtx)) THEN v(g,d) = (n20vhv1_vgd_min_1, n20vhv1_vgd_max_1, n20vhv1_tmax_vgd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: n20vhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20vhv1 IF ((v(d,s) >= 0) && (v(g,s) >= n20vhv1_vtx)) THEN v(g,d) = (n20vhv1_vgd_min_2, n20vhv1_vgd_max_2, n20vhv1_tmax_vgd_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS:   n20vhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0)  THEN v(g,s) = (n20vhv1_vgs_min, n20vhv1_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD:   n20vhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20vhv1 IF (v(d,s) >= 0)  THEN v(g,d) = (n20vhv1_vgd_min, n20vhv1_vgd_max) ENDIF
***** n20vhv1 VD < VS CHECKS *****
.param
+n20vhv1_vbd_reversemin   = '-5.501'
+n20vhv1_vbd_reversemax   = '0.501'
+n20vhv1_vgd_reversemin_1 = '-0.101'
+n20vhv1_vgd_reversemax_1 = '0.101'
+n20vhv1_vgd_reversemin   = '-5.501'
+n20vhv1_vgd_reversemax   = '5.501'
+n20vhv1_vsd_reversemin   = '-0.501'
+n20vhv1_vsd_reversemax   = '5.501'
+n20vhv1_reverse_tmax     = '20.001n'
+n20vhv1_reverse_vds      = '-0.01'
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   n20vhv1 Vbd when Vds is negative for NFET model accuracy" E SUBCKT = n20vhv1 IF (v(d,s) < n20vhv1_reverse_vds) THEN v(b,d) = (n20vhv1_vbd_reversemin, n20vhv1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE_1: n20vhv1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20vhv1 IF (v(d,s) < n20vhv1_reverse_vds) THEN v(g,d) = (n20vhv1_vgd_reversemin_1, n20vhv1_vgd_reversemax_1, n20vhv1_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   n20vhv1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20vhv1 IF (v(d,s) < n20vhv1_reverse_vds) THEN v(g,d) = (n20vhv1_vgd_reversemin, n20vhv1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   n20vhv1 Vsd when Vds is negative for NFET model accuracy " E SUBCKT = n20vhv1 IF (v(d,s) < n20vhv1_reverse_vds) THEN v(s,d) = (n20vhv1_vsd_reversemin, n20vhv1_vsd_reversemax) ENDIF
*****
***** n20vhviso1 VD >= VS CHECKS *****NOTE: NVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: n20vhviso1 Vds for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20vhviso1_vtx))  THEN v(d,s) = (n20vhviso1_vds_min_1, n20vhviso1_vds_max_1, n20vhviso1_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: n20vhviso1 Vds for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20vhviso1_vtx))  THEN v(d,s) = (n20vhviso1_vds_min_2, n20vhviso1_vds_max_2, n20vhviso1_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS:   n20vhviso1 Vds for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0)  THEN v(d,s) = (n20vhviso1_vds_min, n20vhviso1_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: n20vhviso1 Vbs for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0) THEN v(b,s)=(n20vhviso1_vbs_min_1, n20vhviso1_vbs_max_1, n20vhviso1_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS:   n20vhviso1 Vbs for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0) THEN v(b,s)=(n20vhviso1_vbs_min, n20vhviso1_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD_1: n20vhviso1 Vbd for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20vhviso1_vtx)) THEN v(b,d)=(n20vhviso1_vbd_min_1, n20vhviso1_vbd_max_1, n20vhviso1_tmax_vbd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD:   n20vhviso1 Vbd for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0) THEN v(b,d)=(n20vhviso1_vbd_min, n20vhviso1_vbd_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_1: n20vhviso1 Vgb for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0) THEN v(g,b) = (n20vhviso1_vgb_min_1, n20vhviso1_vgb_max_1, n20vhviso1_tmax_vgb_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_2: n20vhviso1 Vgb for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0) THEN v(g,b) = (n20vhviso1_vgb_min_2, n20vhviso1_vgb_max_2, n20vhviso1_tmax_vgb_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB:   n20vhviso1 Vgb for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0) THEN v(g,b) = (n20vhviso1_vgb_min, n20vhviso1_vgb_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: n20vhviso1 Vgs for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) && (v(d,s) >= n20vhviso1_vtx)) THEN v(g,s) = (n20vhviso1_vgs_min_1, n20vhviso1_vgs_max_1, n20vhviso1_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: n20vhviso1 Vgs for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) && (v(d,s) >= n20vhviso1_vtx)) THEN v(g,s) = (n20vhviso1_vgs_min_2, n20vhviso1_vgs_max_2, n20vhviso1_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: n20vhviso1 Vgd for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) && (v(g,s) >= n20vhviso1_vtx)) THEN v(g,d) = (n20vhviso1_vgd_min_1, n20vhviso1_vgd_max_1, n20vhviso1_tmax_vgd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: n20vhviso1 Vgd for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF ((v(d,s) >= 0) && (v(g,s) >= n20vhviso1_vtx)) THEN v(g,d) = (n20vhviso1_vgd_min_2, n20vhviso1_vgd_max_2, n20vhviso1_tmax_vgd_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS:   n20vhviso1 Vgs for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0)  THEN v(g,s) = (n20vhviso1_vgs_min, n20vhviso1_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD:   n20vhviso1 Vgd for NFET Vd > Vs" E SUBCKT = n20vhviso1 IF (v(d,s) >= 0)  THEN v(g,d) = (n20vhviso1_vgd_min, n20vhviso1_vgd_max) ENDIF
***** n20vhviso1 VD < VS CHECKS *****
.param
+n20vhviso1_vbd_reversemin   = '-5.501'
+n20vhviso1_vbd_reversemax   = '0.501'
+n20vhviso1_vgd_reversemin_1 = '-0.101'
+n20vhviso1_vgd_reversemax_1 = '0.101'
+n20vhviso1_vgd_reversemin   = '-5.501'
+n20vhviso1_vgd_reversemax   = '5.501'
+n20vhviso1_vsd_reversemin   = '-0.501'
+n20vhviso1_vsd_reversemax   = '5.501'
+n20vhviso1_reverse_tmax     = '20.001n'
+n20vhviso1_reverse_vds      = '-0.01'
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   n20vhviso1 Vbd when Vds is negative for NFET model accuracy" E SUBCKT = n20vhviso1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(b,d) = (n20vhviso1_vbd_reversemin, n20vhviso1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE_1: n20vhviso1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20vhviso1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(g,d) = (n20vhviso1_vgd_reversemin_1, n20vhviso1_vgd_reversemax_1, n20vhviso1_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   n20vhviso1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20vhviso1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(g,d) = (n20vhviso1_vgd_reversemin, n20vhviso1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   n20vhviso1 Vsd when Vds is negative for NFET model accuracy " E SUBCKT = n20vhviso1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(s,d) = (n20vhviso1_vsd_reversemin, n20vhviso1_vsd_reversemax) ENDIF
*********************************reverse mode only model check only the absolute checks
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   n20vhvisoreverse1 Vbd when Vds is negative for NFET model accuracy" E SUBCKT = n20vhvisoreverse1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(b,d) = (n20vhviso1_vbd_reversemin, n20vhviso1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   n20vhvisoreverse1 Vgd when Vds is negative for NFET model accuracy" E SUBCKT = n20vhvisoreverse1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(g,d) = (n20vhviso1_vgd_reversemin, n20vhviso1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   n20vhvisoreverse1 Vsd when Vds is negative for NFET model accuracy" E SUBCKT = n20vhvisoreverse1 IF (v(d,s) < n20vhviso1_reverse_vds) THEN v(s,d) = (n20vhviso1_vsd_reversemin, n20vhviso1_vsd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_REVERSE:   n20vhvisoreverse1 Vds forward is not allowed for NFET REVERSE Only Model" E SUBCKT = n20vhvisoreverse1 v(d,s) = (*, n20vhviso1_reverse_vds)
*****
***** n20nativevhviso1 VD >= VS CHECKS *****NOTE: NVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: n20nativevhviso1 Vds for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20nativevhviso1_vtx))  THEN v(d,s) = (n20nativevhviso1_vds_min_1, n20nativevhviso1_vds_max_1, n20nativevhviso1_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: n20nativevhviso1 Vds for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20nativevhviso1_vtx))  THEN v(d,s) = (n20nativevhviso1_vds_min_2, n20nativevhviso1_vds_max_2, n20nativevhviso1_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS:   n20nativevhviso1 Vds for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0)  THEN v(d,s) = (n20nativevhviso1_vds_min, n20nativevhviso1_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: n20nativevhviso1 Vbs for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0) THEN v(b,s)=(n20nativevhviso1_vbs_min_1, n20nativevhviso1_vbs_max_1, n20nativevhviso1_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS:   n20nativevhviso1 Vbs for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0) THEN v(b,s)=(n20nativevhviso1_vbs_min, n20nativevhviso1_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD_1: n20nativevhviso1 Vbd for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20nativevhviso1_vtx)) THEN v(b,d)=(n20nativevhviso1_vbd_min_1, n20nativevhviso1_vbd_max_1, n20nativevhviso1_tmax_vbd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD:   n20nativevhviso1 Vbd for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0) THEN v(b,d)=(n20nativevhviso1_vbd_min, n20nativevhviso1_vbd_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_1: n20nativevhviso1 Vgb for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0) THEN v(g,b) = (n20nativevhviso1_vgb_min_1, n20nativevhviso1_vgb_max_1, n20nativevhviso1_tmax_vgb_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_2: n20nativevhviso1 Vgb for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0) THEN v(g,b) = (n20nativevhviso1_vgb_min_2, n20nativevhviso1_vgb_max_2, n20nativevhviso1_tmax_vgb_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB:   n20nativevhviso1 Vgb for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0) THEN v(g,b) = (n20nativevhviso1_vgb_min, n20nativevhviso1_vgb_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: n20nativevhviso1 Vgs for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) && (v(d,s) >= n20nativevhviso1_vtx)) THEN v(g,s) = (n20nativevhviso1_vgs_min_1, n20nativevhviso1_vgs_max_1, n20nativevhviso1_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: n20nativevhviso1 Vgs for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) && (v(d,s) >= n20nativevhviso1_vtx)) THEN v(g,s) = (n20nativevhviso1_vgs_min_2, n20nativevhviso1_vgs_max_2, n20nativevhviso1_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: n20nativevhviso1 Vgd for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) && (v(g,s) >= n20nativevhviso1_vtx)) THEN v(g,d) = (n20nativevhviso1_vgd_min_1, n20nativevhviso1_vgd_max_1, n20nativevhviso1_tmax_vgd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: n20nativevhviso1 Vgd for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF ((v(d,s) >= 0) && (v(g,s) >= n20nativevhviso1_vtx)) THEN v(g,d) = (n20nativevhviso1_vgd_min_2, n20nativevhviso1_vgd_max_2, n20nativevhviso1_tmax_vgd_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS:   n20nativevhviso1 Vgs for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0)  THEN v(g,s) = (n20nativevhviso1_vgs_min, n20nativevhviso1_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD:   n20nativevhviso1 Vgd for NFET Vd > Vs" E SUBCKT = n20nativevhviso1 IF (v(d,s) >= 0)  THEN v(g,d) = (n20nativevhviso1_vgd_min, n20nativevhviso1_vgd_max) ENDIF
***** n20nativevhviso1 VD < VS CHECKS *****
.param
+n20nativevhviso1_vbd_reversemin   = '-5.501'
+n20nativevhviso1_vbd_reversemax   = '0.501'
+n20nativevhviso1_vgd_reversemin_1 = '-0.101'
+n20nativevhviso1_vgd_reversemax_1 = '0.101'
+n20nativevhviso1_vgd_reversemin   = '-5.501'
+n20nativevhviso1_vgd_reversemax   = '5.501'
+n20nativevhviso1_vsd_reversemin   = '-0.501'
+n20nativevhviso1_vsd_reversemax   = '5.501'
+n20nativevhviso1_reverse_tmax     = '20.001n'
+n20nativevhviso1_reverse_vds      = '-0.01'
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   n20nativevhviso1 Vbd when Vds is negative for NFET model accuracy" E SUBCKT = n20nativevhviso1 IF (v(d,s) < n20nativevhviso1_reverse_vds) THEN v(b,d) = (n20nativevhviso1_vbd_reversemin, n20nativevhviso1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE_1: n20nativevhviso1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20nativevhviso1 IF (v(d,s) < n20nativevhviso1_reverse_vds) THEN v(g,d) = (n20nativevhviso1_vgd_reversemin_1, n20nativevhviso1_vgd_reversemax_1, n20nativevhviso1_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   n20nativevhviso1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20nativevhviso1 IF (v(d,s) < n20nativevhviso1_reverse_vds) THEN v(g,d) = (n20nativevhviso1_vgd_reversemin, n20nativevhviso1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   n20nativevhviso1 Vsd when Vds is negative for NFET model accuracy " E SUBCKT = n20nativevhviso1 IF (v(d,s) < n20nativevhviso1_reverse_vds) THEN v(s,d) = (n20nativevhviso1_vsd_reversemin, n20nativevhviso1_vsd_reversemax) ENDIF
*****
***** p20vhv1 VD =< VS CHECKS *****NOTE: PVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: p20vhv1 Vds for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(g,s) < p20vhv1_vtx)) THEN v(d,s)=(p20vhv1_vds_min_1, p20vhv1_vds_max_1, p20vhv1_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: p20vhv1 Vds for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(g,s) < p20vhv1_vtx)) THEN v(d,s)=(p20vhv1_vds_min_2, p20vhv1_vds_max_2, p20vhv1_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS:   p20vhv1 Vds for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(d,s)=(p20vhv1_vds_min, p20vhv1_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: p20vhv1 Vbs for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(b,s)=(p20vhv1_vbs_min_1, p20vhv1_vbs_max_1, p20vhv1_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS:   p20vhv1 Vbs for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(b,s)=(p20vhv1_vbs_min, p20vhv1_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD_1: p20vhv1 Vbd for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(g,s) < p20vhv1_vtx)) THEN v(b,d)=(p20vhv1_vbd_min_1, p20vhv1_vbd_max_1, p20vhv1_tmax_vbd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD:   p20vhv1 Vbd for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(b,d)=(p20vhv1_vbd_min, p20vhv1_vbd_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_1: p20vhv1 Vgb for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(g,b) = (p20vhv1_vgb_min_1, p20vhv1_vgb_max_1, p20vhv1_tmax_vgb_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_2: p20vhv1 Vgb for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(g,b) = (p20vhv1_vgb_min_2, p20vhv1_vgb_max_2, p20vhv1_tmax_vgb_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB:   p20vhv1 Vgb for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(g,b) = (p20vhv1_vgb_min, p20vhv1_vgb_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: p20vhv1 Vgs for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(d,s) < p20vhv1_vtx)) THEN v(g,s) = (p20vhv1_vgs_min_1, p20vhv1_vgs_max_1 , p20vhv1_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: p20vhv1 Vgs for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(d,s) < p20vhv1_vtx)) THEN v(g,s) = (p20vhv1_vgs_min_2, p20vhv1_vgs_max_2 , p20vhv1_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: p20vhv1 Vgd for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(g,s) < p20vhv1_vtx)) THEN v(g,d) = (p20vhv1_vgd_min_1, p20vhv1_vgd_max_1 , p20vhv1_tmax_vgd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: p20vhv1 Vgd for PFET Vd < Vs" E SUBCKT = p20vhv1 IF ((v(d,s) <= 0) && (v(g,s) < p20vhv1_vtx)) THEN v(g,d) = (p20vhv1_vgd_min_2, p20vhv1_vgd_max_2 , p20vhv1_tmax_vgd_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS:   p20vhv1 Vgs for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(g,s) = (p20vhv1_vgs_min, p20vhv1_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD:   p20vhv1 Vgd for PFET Vd < Vs" E SUBCKT = p20vhv1 IF (v(d,s) <= 0) THEN v(g,d) = (p20vhv1_vgd_min, p20vhv1_vgd_max) ENDIF
***** p20vhv1 VD > VS CHECKS *****
.param
+p20vhv1_vbd_reversemin   = '-0.501'
+p20vhv1_vbd_reversemax   = '5.501'
+p20vhv1_vgd_reversemin_1 = '-0.101'
+p20vhv1_vgd_reversemax_1 = '0.101'
+p20vhv1_vgd_reversemin   = '-5.501'
+p20vhv1_vgd_reversemax   = '5.501'
+p20vhv1_vsd_reversemin   = '-5.501'
+p20vhv1_vsd_reversemax   = '0.501'
+p20vhv1_reverse_tmax     = '20.001n'
+p20vhv1_reverse_vds      = '0.01'
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   p20vhv1 Vbd when Vds is positive for PFET model accuracy" E SUBCKT = p20vhv1 IF (v(d,s) > p20vhv1_reverse_vds) THEN v(b,d) = (p20vhv1_vbd_reversemin, p20vhv1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE_1: p20vhv1 Vgd when Vds is positive for PFET model accuracy" E SUBCKT = p20vhv1 IF (v(d,s) > p20vhv1_reverse_vds) THEN v(g,d) = (p20vhv1_vgd_reversemin_1, p20vhv1_vgd_reversemax_1, p20vhv1_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   p20vhv1 Vgd when Vds is positive for PFET model accuracy" E SUBCKT = p20vhv1 IF (v(d,s) > p20vhv1_reverse_vds) THEN v(g,d) = (p20vhv1_vgd_reversemin, p20vhv1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   p20vhv1 Vsd when Vds is positive for PFET model accuracy" E SUBCKT = p20vhv1 IF (v(d,s) > p20vhv1_reverse_vds) THEN v(s,d) = (p20vhv1_vsd_reversemin, p20vhv1_vsd_reversemax) ENDIF
*****
***** n20nativevhv1 VD >= VS CHECKS *****NOTE: NVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: n20nativevhv1 Vds for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20nativevhv1_vtx))  THEN v(d,s) = (n20nativevhv1_vds_min_1, n20nativevhv1_vds_max_1, n20nativevhv1_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: n20nativevhv1 Vds for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20nativevhv1_vtx))  THEN v(d,s) = (n20nativevhv1_vds_min_2, n20nativevhv1_vds_max_2, n20nativevhv1_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS:   n20nativevhv1 Vds for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0)  THEN v(d,s) = (n20nativevhv1_vds_min, n20nativevhv1_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: n20nativevhv1 Vbs for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0) THEN v(b,s)=(n20nativevhv1_vbs_min_1, n20nativevhv1_vbs_max_1, n20nativevhv1_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS:   n20nativevhv1 Vbs for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0) THEN v(b,s)=(n20nativevhv1_vbs_min, n20nativevhv1_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD_1: n20nativevhv1 Vbd for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20nativevhv1_vtx)) THEN v(b,d)=(n20nativevhv1_vbd_min_1, n20nativevhv1_vbd_max_1, n20nativevhv1_tmax_vbd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD:   n20nativevhv1 Vbd for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0) THEN v(b,d)=(n20nativevhv1_vbd_min, n20nativevhv1_vbd_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_1: n20nativevhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20nativevhv1_vgb_min_1, n20nativevhv1_vgb_max_1, n20nativevhv1_tmax_vgb_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_2: n20nativevhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20nativevhv1_vgb_min_2, n20nativevhv1_vgb_max_2, n20nativevhv1_tmax_vgb_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB:   n20nativevhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20nativevhv1_vgb_min, n20nativevhv1_vgb_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: n20nativevhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20nativevhv1_vtx)) THEN v(g,s) = (n20nativevhv1_vgs_min_1, n20nativevhv1_vgs_max_1, n20nativevhv1_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: n20nativevhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20nativevhv1_vtx)) THEN v(g,s) = (n20nativevhv1_vgs_min_2, n20nativevhv1_vgs_max_2, n20nativevhv1_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: n20nativevhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) && (v(g,s) >= n20nativevhv1_vtx)) THEN v(g,d) = (n20nativevhv1_vgd_min_1, n20nativevhv1_vgd_max_1, n20nativevhv1_tmax_vgd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: n20nativevhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF ((v(d,s) >= 0) && (v(g,s) >= n20nativevhv1_vtx)) THEN v(g,d) = (n20nativevhv1_vgd_min_2, n20nativevhv1_vgd_max_2, n20nativevhv1_tmax_vgd_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS:   n20nativevhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0)  THEN v(g,s) = (n20nativevhv1_vgs_min, n20nativevhv1_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD:   n20nativevhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20nativevhv1 IF (v(d,s) >= 0)  THEN v(g,d) = (n20nativevhv1_vgd_min, n20nativevhv1_vgd_max) ENDIF
***** n20nativevhv1 VD < VS CHECKS *****
.param
+n20nativevhv1_vbd_reversemin   = '-5.501'
+n20nativevhv1_vbd_reversemax   = '0.501'
+n20nativevhv1_vgd_reversemin_1 = '-0.101'
+n20nativevhv1_vgd_reversemax_1 = '0.101'
+n20nativevhv1_vgd_reversemin   = '-5.501'
+n20nativevhv1_vgd_reversemax   = '5.501'
+n20nativevhv1_vsd_reversemin   = '-0.501'
+n20nativevhv1_vsd_reversemax   = '5.501'
+n20nativevhv1_reverse_tmax     = '20.001n'
+n20nativevhv1_reverse_vds      = '-0.01'
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   n20nativevhv1 Vbd when Vds is negative for NFET model accuracy" E SUBCKT = n20nativevhv1 IF (v(d,s) < n20nativevhv1_reverse_vds) THEN v(b,d) = (n20nativevhv1_vbd_reversemin, n20nativevhv1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE_1: n20nativevhv1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20nativevhv1 IF (v(d,s) < n20nativevhv1_reverse_vds) THEN v(g,d) = (n20nativevhv1_vgd_reversemin_1, n20nativevhv1_vgd_reversemax_1, n20nativevhv1_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   n20nativevhv1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20nativevhv1 IF (v(d,s) < n20nativevhv1_reverse_vds) THEN v(g,d) = (n20nativevhv1_vgd_reversemin, n20nativevhv1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   n20nativevhv1 Vsd when Vds is negative for NFET model accuracy " E SUBCKT = n20nativevhv1 IF (v(d,s) < n20nativevhv1_reverse_vds) THEN v(s,d) = (n20nativevhv1_vsd_reversemin, n20nativevhv1_vsd_reversemax) ENDIF
*****
***** n20zvtvhv1 VD >= VS CHECKS *****NOTE: NVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: n20zvtvhv1 Vds for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20zvtvhv1_vtx))  THEN v(d,s) = (n20zvtvhv1_vds_min_1, n20zvtvhv1_vds_max_1, n20zvtvhv1_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: n20zvtvhv1 Vds for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20zvtvhv1_vtx))  THEN v(d,s) = (n20zvtvhv1_vds_min_2, n20zvtvhv1_vds_max_2, n20zvtvhv1_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS:   n20zvtvhv1 Vds for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0)  THEN v(d,s) = (n20zvtvhv1_vds_min, n20zvtvhv1_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: n20zvtvhv1 Vbs for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0) THEN v(b,s)=(n20zvtvhv1_vbs_min_1, n20zvtvhv1_vbs_max_1, n20zvtvhv1_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS:   n20zvtvhv1 Vbs for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0) THEN v(b,s)=(n20zvtvhv1_vbs_min, n20zvtvhv1_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD_1: n20zvtvhv1 Vbd for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) &&  (v(g,s) > n20zvtvhv1_vtx)) THEN v(b,d)=(n20zvtvhv1_vbd_min_1, n20zvtvhv1_vbd_max_1, n20zvtvhv1_tmax_vbd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD:   n20zvtvhv1 Vbd for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0) THEN v(b,d)=(n20zvtvhv1_vbd_min, n20zvtvhv1_vbd_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_1: n20zvtvhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20zvtvhv1_vgb_min_1, n20zvtvhv1_vgb_max_1, n20zvtvhv1_tmax_vgb_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB_2: n20zvtvhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20zvtvhv1_vgb_min_2, n20zvtvhv1_vgb_max_2, n20zvtvhv1_tmax_vgb_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGB:   n20zvtvhv1 Vgb for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0) THEN v(g,b) = (n20zvtvhv1_vgb_min, n20zvtvhv1_vgb_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: n20zvtvhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20zvtvhv1_vtx)) THEN v(g,s) = (n20zvtvhv1_vgs_min_1, n20zvtvhv1_vgs_max_1, n20zvtvhv1_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: n20zvtvhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20zvtvhv1_vtx)) THEN v(g,s) = (n20zvtvhv1_vgs_min_2, n20zvtvhv1_vgs_max_2, n20zvtvhv1_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: n20zvtvhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) && (v(g,s) >= n20zvtvhv1_vtx)) THEN v(g,d) = (n20zvtvhv1_vgd_min_1, n20zvtvhv1_vgd_max_1, n20zvtvhv1_tmax_vgd_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: n20zvtvhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) && (v(g,s) >= n20zvtvhv1_vtx)) THEN v(g,d) = (n20zvtvhv1_vgd_min_2, n20zvtvhv1_vgd_max_2, n20zvtvhv1_tmax_vgd_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS:   n20zvtvhv1 Vgs for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0)  THEN v(g,s) = (n20zvtvhv1_vgs_min, n20zvtvhv1_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD:   n20zvtvhv1 Vgd for NFET Vd > Vs" E SUBCKT = n20zvtvhv1 IF (v(d,s) >= 0)  THEN v(g,d) = (n20zvtvhv1_vgd_min, n20zvtvhv1_vgd_max) ENDIF
***** n20zvtvhv1 VD < VS CHECKS *****
.param
+n20zvtvhv1_vbd_reversemin   = '-5.501'
+n20zvtvhv1_vbd_reversemax   = '0.501'
+n20zvtvhv1_vgd_reversemin_1 = '-0.101'
+n20zvtvhv1_vgd_reversemax_1 = '0.101'
+n20zvtvhv1_vgd_reversemin   = '-5.501'
+n20zvtvhv1_vgd_reversemax   = '5.501'
+n20zvtvhv1_vsd_reversemin   = '-0.501'
+n20zvtvhv1_vsd_reversemax   = '5.501'
+n20zvtvhv1_reverse_tmax     = '20.001n'
+n20zvtvhv1_reverse_vds      = '-0.01'
.SETSOA LABEL="MODEL_OOB_VBD_REVERSE:   n20zvtvhv1 Vbd when Vds is negative for NFET model accuracy" E SUBCKT = n20zvtvhv1 IF (v(d,s) < n20zvtvhv1_reverse_vds) THEN v(b,d) = (n20zvtvhv1_vbd_reversemin, n20zvtvhv1_vbd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE_1: n20zvtvhv1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20zvtvhv1 IF (v(d,s) < n20zvtvhv1_reverse_vds) THEN v(g,d) = (n20zvtvhv1_vgd_reversemin_1, n20zvtvhv1_vgd_reversemax_1, n20zvtvhv1_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_REVERSE:   n20zvtvhv1 Vgd when Vds is negative for NFET model accuracy " E SUBCKT = n20zvtvhv1 IF (v(d,s) < n20zvtvhv1_reverse_vds) THEN v(g,d) = (n20zvtvhv1_vgd_reversemin, n20zvtvhv1_vgd_reversemax) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_REVERSE:   n20zvtvhv1 Vsd when Vds is negative for NFET model accuracy " E SUBCKT = n20zvtvhv1 IF (v(d,s) < n20zvtvhv1_reverse_vds) THEN v(s,d) = (n20zvtvhv1_vsd_reversemin, n20zvtvhv1_vsd_reversemax) ENDIF
*********************************Accuracy checks for n20zvtvhv1
.SETSOA LABEL="MODEL_OOB_VGS_MODELACCURACY01: n20zvtvhv1 Vgs and Vds large for NFET model accuracy" E SUBCKT = n20zvtvhv1 IF ((v(d,s) >= 0) && (v(d,s) >= n20zvtvhv1_vds_max_model01)) THEN v(g,s) = (n20zvtvhv1_vgs_min_model01, n20zvtvhv1_vgs_max_model01, n20zvtvhv1_tmax_vgs_model01) ENDIF
*****
******************************************
********Standard Devices Below************
******************************************
**S8 Vgs Vds Vbs Check File 
************************
.param
************************
*
+nshort_vbs_min_1 = '-1.981'
+nshort_vbs_max_1 = '0.301'
+nshort_tmax_vbs_1 = '20.001n'
+nshort_vbs_min = '-3.961'
+nshort_vbs_max = '1.001'
+nshort_vds_min_1 = '-0.01'
+nshort_vds_max_1 = '2.071'
+nshort_tmax_vds_1 = '100.001n'
+nshort_vds_min_2 = '-0.01'
+nshort_vds_max_2 = '2.161'
+nshort_tmax_vds_2 = '20.001n'
+nshort_vds_min = '-0.01'
+nshort_vds_max = '2.501'
+nshort_vgs_min_1 = '-1*2.071'
+nshort_vgs_max_1 = '2.071'
+nshort_tmax_vgs_1 = '100.001n'
+nshort_vgs_min_2 = '-1*2.161'
+nshort_vgs_max_2 = '2.161'
+nshort_tmax_vgs_2 = '20.001n'
+nshort_vgs_min = '-1*2.301'
+nshort_vgs_max = '2.301'
+nshort_vtx = '0.5'
*
+nshortesd_vbs_min_1 = '-1.981'
+nshortesd_vbs_max_1 = '0.301'
+nshortesd_tmax_vbs_1 = '20.001n'
+nshortesd_vbs_min = '-3.961'
+nshortesd_vbs_max = '1.001'
+nshortesd_vds_min_1 = '-0.01'
+nshortesd_vds_max_1 = '2.071'
+nshortesd_tmax_vds_1 = '100.001n'
+nshortesd_vds_min_2 = '-0.01'
+nshortesd_vds_max_2 = '2.161'
+nshortesd_tmax_vds_2 = '20.001n'
+nshortesd_vds_min = '-0.01'
+nshortesd_vds_max = '2.501'
+nshortesd_vgs_min_1 = '-1*2.071'
+nshortesd_vgs_max_1 = '2.071'
+nshortesd_tmax_vgs_1 = '100.001n'
+nshortesd_vgs_min_2 = '-1*2.161'
+nshortesd_vgs_max_2 = '2.161'
+nshortesd_tmax_vgs_2 = '20.001n'
+nshortesd_vgs_min = '-1*2.301'
+nshortesd_vgs_max = '2.301'
+nshortesd_vtx = '0.56'
*
+pshort_vbs_min_1 = '-0.101'
+pshort_vbs_max_1 = '1.981'
+pshort_tmax_vbs_1 = '20.001n'
+pshort_vbs_min = '-1.001'
+pshort_vbs_max = '3.961'
+pshort_vds_min_1 = '-2.071'
+pshort_vds_max_1 = '0.01'
+pshort_tmax_vds_1 = '100.001n'
+pshort_vds_min_2 = '-2.161'
+pshort_vds_max_2 = '0.01'
+pshort_tmax_vds_2 = '20.001n'
+pshort_vds_min = '-2.501'
+pshort_vds_max = '0.01'
+pshort_vgs_min_1 = '-2.071'
+pshort_vgs_max_1 = '-1*-2.071'
+pshort_tmax_vgs_1 = '100.001n'
+pshort_vgs_min_2 = '-2.161'
+pshort_vgs_max_2 = '-1*-2.161'
+pshort_tmax_vgs_2 = '20.001n'
+pshort_vgs_min = '-2.301'
+pshort_vgs_max = '-1*-2.301'
+pshort_vtx = '-0.54'
*
+plowvt_vbs_min_1 = '-0.101'
+plowvt_vbs_max_1 = '1.981'
+plowvt_tmax_vbs_1 = '20.001n'
+plowvt_vbs_min = '-1.001'
+plowvt_vbs_max = '3.961'
+plowvt_vds_min_1 = '-2.071'
+plowvt_vds_max_1 = '0.01'
+plowvt_tmax_vds_1 = '100.001n'
+plowvt_vds_min_2 = '-2.161'
+plowvt_vds_max_2 = '0.01'
+plowvt_tmax_vds_2 = '20.001n'
+plowvt_vds_min = '-2.501'
+plowvt_vds_max = '0.01'
+plowvt_vgs_min_1 = '-2.071'
+plowvt_vgs_max_1 = '-1*-2.071'
+plowvt_tmax_vgs_1 = '100.001n'
+plowvt_vgs_min_2 = '-2.161'
+plowvt_vgs_max_2 = '-1*-2.161'
+plowvt_tmax_vgs_2 = '20.001n'
+plowvt_vgs_min = '-2.301'
+plowvt_vgs_max = '-1*-2.301'
+plowvt_vtx = '-0.3'
*
+phighvt_vbs_min_1 = '-0.101'
+phighvt_vbs_max_1 = '1.981'
+phighvt_tmax_vbs_1 = '20.001n'
+phighvt_vbs_min = '-1.001'
+phighvt_vbs_max = '3.961'
+phighvt_vds_min_1 = '-2.071'
+phighvt_vds_max_1 = '0.01'
+phighvt_tmax_vds_1 = '100.001n'
+phighvt_vds_min_2 = '-2.161'
+phighvt_vds_max_2 = '0.01'
+phighvt_tmax_vds_2 = '20.001n'
+phighvt_vds_min = '-2.501'
+phighvt_vds_max = '0.01'
+phighvt_vgs_min_1 = '-2.071'
+phighvt_vgs_max_1 = '-1*-2.071'
+phighvt_tmax_vgs_1 = '100.001n'
+phighvt_vgs_min_2 = '-2.161'
+phighvt_vgs_max_2 = '-1*-2.161'
+phighvt_tmax_vgs_2 = '20.001n'
+phighvt_vgs_min = '-2.301'
+phighvt_vgs_max = '-1*-2.301'
+phighvt_vtx = '-0.66'
*
+nlowvt_vbs_min_1 = '-1.981'
+nlowvt_vbs_max_1 = '0.301'
+nlowvt_tmax_vbs_1 = '20.001n'
+nlowvt_vbs_min = '-3.961'
+nlowvt_vbs_max = '1.001'
+nlowvt_vds_min_1 = '-0.01'
+nlowvt_vds_max_1 = '2.071'
+nlowvt_tmax_vds_1 = '100.001n'
+nlowvt_vds_min_2 = '-0.01'
+nlowvt_vds_max_2 = '2.161'
+nlowvt_tmax_vds_2 = '20.001n'
+nlowvt_vds_min = '-0.01'
+nlowvt_vds_max = '2.501'
+nlowvt_vgs_min_1 = '-1*2.071'
+nlowvt_vgs_max_1 = '2.071'
+nlowvt_tmax_vgs_1 = '100.001n'
+nlowvt_vgs_min_2 = '-1*2.161'
+nlowvt_vgs_max_2 = '2.161'
+nlowvt_tmax_vgs_2 = '20.001n'
+nlowvt_vgs_min = '-1*2.301'
+nlowvt_vgs_max = '2.301'
+nlowvt_vtx = '0.43'
*
+nlvtpass_vbs_min_1 = '-1.981'
+nlvtpass_vbs_max_1 = '0.301'
+nlvtpass_tmax_vbs_1 = '20.001n'
+nlvtpass_vbs_min = '-3.961'
+nlvtpass_vbs_max = '1.001'
+nlvtpass_vds_min_1 = '-0.01'
+nlvtpass_vds_max_1 = '2.071'
+nlvtpass_tmax_vds_1 = '100.001n'
+nlvtpass_vds_min_2 = '-0.01'
+nlvtpass_vds_max_2 = '2.161'
+nlvtpass_tmax_vds_2 = '20.001n'
+nlvtpass_vds_min = '-0.01'
+nlvtpass_vds_max = '2.501'
+nlvtpass_vgs_min_1 = '-1*2.071'
+nlvtpass_vgs_max_1 = '2.071'
+nlvtpass_tmax_vgs_1 = '100.001n'
+nlvtpass_vgs_min_2 = '-1*2.161'
+nlvtpass_vgs_max_2 = '2.161'
+nlvtpass_tmax_vgs_2 = '20.001n'
+nlvtpass_vgs_min = '-1*2.301'
+nlvtpass_vgs_max = '2.301'
+nlvtpass_vtx = '0.43'
*
+nhvesd_vbs_min_1 = '-5.501'
+nhvesd_vbs_max_1 = '0.001'
+nhvesd_tmax_vbs_1 = '20.001n'
+nhvesd_vbs_min = '-11.001'
+nhvesd_vbs_max = '1.001'
+nhvesd_vds_min_1 = '-0.01'
+nhvesd_vds_max_1 = '5.751'
+nhvesd_tmax_vds_1 = '100.001n'
+nhvesd_vds_min_2 = '-0.01'
+nhvesd_vds_max_2 = '6.001'
+nhvesd_tmax_vds_2 = '20.001n'
+nhvesd_vds_min = '-0.01'
+nhvesd_vds_max = '6.501'
+nhvesd_vgs_min_1 = '-1*5.751'
+nhvesd_vgs_max_1 = '5.751'
+nhvesd_tmax_vgs_1 = '100.001n'
+nhvesd_vgs_min_2 = '-1*6.001'
+nhvesd_vgs_max_2 = '6.001'
+nhvesd_tmax_vgs_2 = '20.001n'
+nhvesd_vgs_min = '-1*6.501'
+nhvesd_vgs_max = '6.501'
+nhvesd_vtx = '0.74'
*
+phvesd_vbs_min_1 = '-0.001'
+phvesd_vbs_max_1 = '5.501'
+phvesd_tmax_vbs_1 = '20.001n'
+phvesd_vbs_min = '-1.001'
+phvesd_vbs_max = '11.001'
+phvesd_vds_min_1 = '-5.751'
+phvesd_vds_max_1 = '0.01'
+phvesd_tmax_vds_1 = '100.001n'
+phvesd_vds_min_2 = '-6.001'
+phvesd_vds_max_2 = '0.01'
+phvesd_tmax_vds_2 = '20.001n'
+phvesd_vds_min = '-6.501'
+phvesd_vds_max = '0.01'
+phvesd_vgs_min_1 = '-5.751'
+phvesd_vgs_max_1 = '-1*-5.751'
+phvesd_tmax_vgs_1 = '100.001n'
+phvesd_vgs_min_2 = '-6.001'
+phvesd_vgs_max_2 = '-1*-6.001'
+phvesd_tmax_vgs_2 = '20.001n'
+phvesd_vgs_min = '-6.501'
+phvesd_vgs_max = '-1*-6.501'
+phvesd_vtx = '-0.87'
*
+ntvnative_vbs_min_1 = '-3.301'
+ntvnative_vbs_max_1 = '0.001'
+ntvnative_tmax_vbs_1 = '20.001n'
+ntvnative_vbs_min = '-6.601'
+ntvnative_vbs_max = '1.001'
+ntvnative_vds_min_1 = '-0.01'
+ntvnative_vds_max_1 = '3.451'
+ntvnative_tmax_vds_1 = '100.001n'
+ntvnative_vds_min_2 = '-0.01'
+ntvnative_vds_max_2 = '3.601'
+ntvnative_tmax_vds_2 = '20.001n'
+ntvnative_vds_min = '-0.01'
+ntvnative_vds_max = '6.501'
+ntvnative_vgs_min_1 = '-1*3.451'
+ntvnative_vgs_max_1 = '3.451'
+ntvnative_tmax_vgs_1 = '100.001n'
+ntvnative_vgs_min_2 = '-1*3.601'
+ntvnative_vgs_max_2 = '3.601'
+ntvnative_tmax_vgs_2 = '20.001n'
+ntvnative_vgs_min = '-1*6.501'
+ntvnative_vgs_max = '6.501'
+ntvnative_vtx = '-0.15'
*
+nhvnative_vbs_min_1 = '-5.501'
+nhvnative_vbs_max_1 = '0.301'
+nhvnative_tmax_vbs_1 = '20.001n'
+nhvnative_vbs_min = '-11.001'
+nhvnative_vbs_max = '1.001'
+nhvnative_vds_min_1 = '-0.01'
+nhvnative_vds_max_1 = '5.751'
+nhvnative_tmax_vds_1 = '100.001n'
+nhvnative_vds_min_2 = '-0.01'
+nhvnative_vds_max_2 = '6.001'
+nhvnative_tmax_vds_2 = '20.001n'
+nhvnative_vds_min = '-0.01'
+nhvnative_vds_max = '6.501'
+nhvnative_vgs_min_1 = '-1*5.751'
+nhvnative_vgs_max_1 = '5.751'
+nhvnative_tmax_vgs_1 = '100.001n'
+nhvnative_vgs_min_2 = '-1*6.001'
+nhvnative_vgs_max_2 = '6.001'
+nhvnative_tmax_vgs_2 = '20.001n'
+nhvnative_vgs_min = '-1*6.501'
+nhvnative_vgs_max = '6.501'
+nhvnative_vtx = '-0.01'
*
+nhvnativeesd_vbs_min_1 = '-5.501'
+nhvnativeesd_vbs_max_1 = '0.301'
+nhvnativeesd_tmax_vbs_1 = '20.001n'
+nhvnativeesd_vbs_min = '-11.001'
+nhvnativeesd_vbs_max = '1.001'
+nhvnativeesd_vds_min_1 = '-0.01'
+nhvnativeesd_vds_max_1 = '5.751'
+nhvnativeesd_tmax_vds_1 = '100.001n'
+nhvnativeesd_vds_min_2 = '-0.01'
+nhvnativeesd_vds_max_2 = '6.001'
+nhvnativeesd_tmax_vds_2 = '20.001n'
+nhvnativeesd_vds_min = '-0.01'
+nhvnativeesd_vds_max = '6.501'
+nhvnativeesd_vgs_min_1 = '-1*5.751'
+nhvnativeesd_vgs_max_1 = '5.751'
+nhvnativeesd_tmax_vgs_1 = '100.001n'
+nhvnativeesd_vgs_min_2 = '-1*6.001'
+nhvnativeesd_vgs_max_2 = '6.001'
+nhvnativeesd_tmax_vgs_2 = '20.001n'
+nhvnativeesd_vgs_min = '-1*6.501'
+nhvnativeesd_vgs_max = '6.501'
+nhvnativeesd_vtx = '-0.01'
*
+nhv_vbs_min_1 = '-5.501'
+nhv_vbs_max_1 = '0.101'
+nhv_tmax_vbs_1 = '20.001n'
+nhv_vbs_min = '-9.001'
+nhv_vbs_max = '1.001'
+nhv_vds_min_1 = '-0.01'
+nhv_vds_max_1 = '5.751'
+nhv_tmax_vds_1 = '100.001n'
+nhv_vds_min_2 = '-0.01'
+nhv_vds_max_2 = '6.001'
+nhv_tmax_vds_2 = '20.001n'
+nhv_vds_min = '-0.01'
+nhv_vds_max = '6.501'
+nhv_vgs_min_1 = '-1*5.751'
+nhv_vgs_max_1 = '5.751'
+nhv_tmax_vgs_1 = '100.001n'
+nhv_vgs_min_2 = '-1*6.001'
+nhv_vgs_max_2 = '6.001'
+nhv_tmax_vgs_2 = '20.001n'
+nhv_vgs_min = '-1*6.501'
+nhv_vgs_max = '6.501'
+nhv_vtx = '0.61'
*
+phv_vbs_min_1 = '-0.101'
+phv_vbs_max_1 = '5.501'
+phv_tmax_vbs_1 = '20.001n'
+phv_vbs_min = '-1.001'
+phv_vbs_max = '11.001'
+phv_vds_min_1 = '-5.751'
+phv_vds_max_1 = '0.01'
+phv_tmax_vds_1 = '100.001n'
+phv_vds_min_2 = '-6.001'
+phv_vds_max_2 = '0.01'
+phv_tmax_vds_2 = '20.001n'
+phv_vds_min = '-6.501'
+phv_vds_max = '0.01'
+phv_vgs_min_1 = '-5.751'
+phv_vgs_max_1 = '-1*-5.751'
+phv_tmax_vgs_1 = '100.001n'
+phv_vgs_min_2 = '-6.001'
+phv_vgs_max_2 = '-1*-6.001'
+phv_tmax_vgs_2 = '20.001n'
+phv_vgs_min = '-6.501'
+phv_vgs_max = '-1*-6.501'
+phv_vtx = '-0.69'
*
+nvhv_vbs_min_1 = '-5.501'
+nvhv_vbs_max_1 = '0.001'
+nvhv_tmax_vbs_1 = '20.001n'
+nvhv_vbs_min = '-9.001'
+nvhv_vbs_max = '1.001'
+nvhv_vds_min_1 = '-0.01'
+nvhv_vds_max_1 = '10.5'
+nvhv_tmax_vds_1 = '100.001n'
+nvhv_vds_min_2 = '-0.01'
+nvhv_vds_max_2 = '10.9'
+nvhv_tmax_vds_2 = '20.001n'
+nvhv_vds_min = '-0.01'
+nvhv_vds_max = '11.7'
+nvhv_vgs_min_1 = '-1*5.751'
+nvhv_vgs_max_1 = '5.751'
+nvhv_tmax_vgs_1 = '100.001n'
+nvhv_vgs_min_2 = '-1*6.001'
+nvhv_vgs_max_2 = '6.001'
+nvhv_tmax_vgs_2 = '20.001n'
+nvhv_vgs_min = '-1*6.501'
+nvhv_vgs_max = '6.501'
+nvhv_vtx = '0.51'
*
+pvhv_vbs_min_1 = '-0.001'
+pvhv_vbs_max_1 = '5.501'
+pvhv_tmax_vbs_1 = '20.001n'
+pvhv_vbs_min = '-1.001'
+pvhv_vbs_max = '11.001'
+pvhv_vds_min_1 = '-10.5'
+pvhv_vds_max_1 = '0.01'
+pvhv_tmax_vds_1 = '100.001n'
+pvhv_vds_min_2 = '-10.9'
+pvhv_vds_max_2 = '0.01'
+pvhv_tmax_vds_2 = '20.001n'
+pvhv_vds_min = '-11.7'
+pvhv_vds_max = '0.01'
+pvhv_vgs_min_1 = '-5.751'
+pvhv_vgs_max_1 = '-1*-5.751'
+pvhv_tmax_vgs_1 = '100.001n'
+pvhv_vgs_min_2 = '-6.001'
+pvhv_vgs_max_2 = '-1*-6.001'
+pvhv_tmax_vgs_2 = '20.001n'
+pvhv_vgs_min = '-6.501'
+pvhv_vgs_max = '-1*-6.501'
+pvhv_vtx = '-0.92'
*
+vpp_min = -40.001
+vpp_max = 40.001
***** nshort VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nshort Vbs for NFET Vd > Vs" M nshort IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nshort_vgs_max_1))  THEN VB(*)-VS(*)=(nshort_vbs_min_1, nshort_vbs_max_1, nshort_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nshort Vbs for NFET Vd > Vs" M nshort IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nshort_vbs_min, nshort_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nshort Vds for NFET Vd > Vs" M nshort IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nshort_vtx))  THEN VD(*)-VS(*)=(nshort_vds_min_1, nshort_vds_max_1, nshort_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nshort Vds for NFET Vd > Vs" M nshort IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nshort_vtx))  THEN VD(*)-VS(*)=(nshort_vds_min_2, nshort_vds_max_2, nshort_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nshort Vds for NFET Vd > Vs" M nshort IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nshort_vds_min, nshort_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nshort Vgs for NFET Vd > Vs" M nshort IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nshort_vtx)) THEN VG(*)-VS(*)=(nshort_vgs_min_1, nshort_vgs_max_1, nshort_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nshort Vgs for NFET Vd > Vs" M nshort IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nshort_vtx)) THEN VG(*)-VS(*)=(nshort_vgs_min_2, nshort_vgs_max_2, nshort_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nshort Vgs for NFET Vd > Vs" M nshort IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nshort_vgs_min, nshort_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nshort Vbs for NFET Vd > Vs" M nshort IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nshort_vbs_min, nshort_vbs_max) ENDIF
***** nshort VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nshort Vbd for NFET Vd < Vs" M nshort IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nshort_vgs_max_1))  THEN VB(*)-VD(*)=(nshort_vbs_min_1, nshort_vbs_max_1, nshort_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nshort Vbd for NFET Vd < Vs" M nshort IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nshort_vbs_min, nshort_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nshort Vsd for NFET Vd < Vs" M nshort IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nshort_vtx)) THEN VS(*)-VD(*)=(nshort_vds_min_1, nshort_vds_max_1, nshort_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nshort Vsd for NFET Vd < Vs" M nshort IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nshort_vtx)) THEN VS(*)-VD(*)=(nshort_vds_min_2, nshort_vds_max_2, nshort_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nshort Vsd for NFET Vd < Vs" M nshort IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nshort_vds_min, nshort_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nshort Vgd for NFET Vd < Vs" M nshort IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nshort_vtx)) THEN VG(*)-VD(*)=(nshort_vgs_min_1, nshort_vgs_max_1, nshort_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nshort Vgd for NFET Vd < Vs" M nshort IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nshort_vtx)) THEN VG(*)-VD(*)=(nshort_vgs_min_2, nshort_vgs_max_2, nshort_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nshort Vgd for NFET Vd < Vs" M nshort IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nshort_vgs_min, nshort_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nshort Vbd for NFET Vd < Vs" M nshort IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nshort_vbs_min, nshort_vbs_max) ENDIF
***** nshortesd VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nshortesd Vbs for NFET Vd > Vs" M nshortesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nshortesd_vgs_max_1))  THEN VB(*)-VS(*)=(nshortesd_vbs_min_1, nshortesd_vbs_max_1, nshortesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nshortesd Vbs for NFET Vd > Vs" M nshortesd IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nshortesd_vbs_min, nshortesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nshortesd Vds for NFET Vd > Vs" M nshortesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nshortesd_vtx))  THEN VD(*)-VS(*)=(nshortesd_vds_min_1, nshortesd_vds_max_1, nshortesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nshortesd Vds for NFET Vd > Vs" M nshortesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nshortesd_vtx))  THEN VD(*)-VS(*)=(nshortesd_vds_min_2, nshortesd_vds_max_2, nshortesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nshortesd Vds for NFET Vd > Vs" M nshortesd IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nshortesd_vds_min, nshortesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nshortesd Vgs for NFET Vd > Vs" M nshortesd IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nshortesd_vtx)) THEN VG(*)-VS(*)=(nshortesd_vgs_min_1, nshortesd_vgs_max_1, nshortesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nshortesd Vgs for NFET Vd > Vs" M nshortesd IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nshortesd_vtx)) THEN VG(*)-VS(*)=(nshortesd_vgs_min_2, nshortesd_vgs_max_2, nshortesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nshortesd Vgs for NFET Vd > Vs" M nshortesd IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nshortesd_vgs_min, nshortesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nshortesd Vbs for NFET Vd > Vs" M nshortesd IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nshortesd_vbs_min, nshortesd_vbs_max) ENDIF
***** nshortesd VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nshortesd Vbd for NFET Vd < Vs" M nshortesd IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nshortesd_vgs_max_1))  THEN VB(*)-VD(*)=(nshortesd_vbs_min_1, nshortesd_vbs_max_1, nshortesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nshortesd Vbd for NFET Vd < Vs" M nshortesd IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nshortesd_vbs_min, nshortesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nshortesd Vsd for NFET Vd < Vs" M nshortesd IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nshortesd_vtx)) THEN VS(*)-VD(*)=(nshortesd_vds_min_1, nshortesd_vds_max_1, nshortesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nshortesd Vsd for NFET Vd < Vs" M nshortesd IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nshortesd_vtx)) THEN VS(*)-VD(*)=(nshortesd_vds_min_2, nshortesd_vds_max_2, nshortesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nshortesd Vsd for NFET Vd < Vs" M nshortesd IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nshortesd_vds_min, nshortesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nshortesd Vgd for NFET Vd < Vs" M nshortesd IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nshortesd_vtx)) THEN VG(*)-VD(*)=(nshortesd_vgs_min_1, nshortesd_vgs_max_1, nshortesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nshortesd Vgd for NFET Vd < Vs" M nshortesd IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nshortesd_vtx)) THEN VG(*)-VD(*)=(nshortesd_vgs_min_2, nshortesd_vgs_max_2, nshortesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nshortesd Vgd for NFET Vd < Vs" M nshortesd IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nshortesd_vgs_min, nshortesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nshortesd Vbd for NFET Vd < Vs" M nshortesd IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nshortesd_vbs_min, nshortesd_vbs_max) ENDIF
***** pshort VD =< VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1 pshort Vbs for PFET Vd < Vs" M pshort IF ((VD(*)-VS(*) <= 0) &&  (VG(*)-VS(*)<pshort_vgs_min_1))  THEN VB(*)-VS(*)=(pshort_vbs_min_1, pshort_vbs_max_1, pshort_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: pshort Vbs for PFET Vd < Vs" M pshort IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VS(*)=(pshort_vbs_min, pshort_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: pshort Vds for PFET Vd < Vs" M pshort IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<pshort_vtx))  THEN VD(*)-VS(*)=(pshort_vds_min_1, pshort_vds_max_1, pshort_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: pshort Vds for PFET Vd < Vs" M pshort IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<pshort_vtx))  THEN VD(*)-VS(*)=(pshort_vds_min_2, pshort_vds_max_2, pshort_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: pshort Vds for PFET Vd < Vs" M pshort IF (VD(*)-VS(*) <= 0)  THEN VD(*)-VS(*)=(pshort_vds_min, pshort_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1 pshort Vgs for PFET Vd < Vs" M pshort IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= pshort_vtx)) THEN VG(*)-VS(*)=(pshort_vgs_min_1, pshort_vgs_max_1, pshort_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2 pshort Vgs for PFET Vd < Vs" M pshort IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= pshort_vtx)) THEN VG(*)-VS(*)=(pshort_vgs_min_2, pshort_vgs_max_2, pshort_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: pshort Vgs for PFET Vd < Vs" M pshort IF (VD(*)-VS(*) <= 0)  THEN VG(*)-VS(*)=(pshort_vgs_min, pshort_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: pshort Vbs for PFET Vd < Vs" M pshort IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VD(*)=(pshort_vbs_min, pshort_vbs_max) ENDIF
***** pshort VD > VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1 pshort Vbd for PFET Vd > Vs" M pshort IF ((VD(*)-VS(*) > 0) &&  (VG(*)-VD(*)<pshort_vgs_min_1))  THEN VB(*)-VD(*)=(pshort_vbs_min_1, pshort_vbs_max_1, pshort_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: pshort Vbd for PFET Vd > Vs" M pshort IF (VD(*)-VS(*) > 0)  THEN VB(*)-VD(*)=(pshort_vbs_min, pshort_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: pshort Vsd for PFET Vd > Vs" M pshort IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<pshort_vtx))  THEN VS(*)-VD(*)=(pshort_vds_min_1, pshort_vds_max_1, pshort_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: pshort Vsd for PFET Vd > Vs" M pshort IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<pshort_vtx))  THEN VS(*)-VD(*)=(pshort_vds_min_2, pshort_vds_max_2, pshort_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: pshort Vsd for PFET Vd > Vs" M pshort IF (VD(*)-VS(*) > 0)  THEN VS(*)-VD(*)=(pshort_vds_min, pshort_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: pshort Vgd for PFET Vd > Vs" M pshort IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < pshort_vtx)) THEN VG(*)-VD(*)=(pshort_vgs_min_1, pshort_vgs_max_1, pshort_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: pshort Vgd for PFET Vd > Vs" M pshort IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < pshort_vtx)) THEN VG(*)-VD(*)=(pshort_vgs_min_2, pshort_vgs_max_2, pshort_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: pshort Vgd for PFET Vd > Vs" M pshort IF (VD(*)-VS(*) > 0)  THEN VG(*)-VD(*)=(pshort_vgs_min, pshort_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: pshort Vbd for PFET Vd > Vs" M pshort IF (VD(*)-VS(*) > 0)  THEN VB(*)-VS(*)=(pshort_vbs_min, pshort_vbs_max) ENDIF
***** plowvt VD =< VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1 plowvt Vbs for PFET Vd < Vs" M plowvt IF ((VD(*)-VS(*) <= 0) &&  (VG(*)-VS(*)<plowvt_vgs_min_1))  THEN VB(*)-VS(*)=(plowvt_vbs_min_1, plowvt_vbs_max_1, plowvt_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: plowvt Vbs for PFET Vd < Vs" M plowvt IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VS(*)=(plowvt_vbs_min, plowvt_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: plowvt Vds for PFET Vd < Vs" M plowvt IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<plowvt_vtx))  THEN VD(*)-VS(*)=(plowvt_vds_min_1, plowvt_vds_max_1, plowvt_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: plowvt Vds for PFET Vd < Vs" M plowvt IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<plowvt_vtx))  THEN VD(*)-VS(*)=(plowvt_vds_min_2, plowvt_vds_max_2, plowvt_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: plowvt Vds for PFET Vd < Vs" M plowvt IF (VD(*)-VS(*) <= 0)  THEN VD(*)-VS(*)=(plowvt_vds_min, plowvt_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1 plowvt Vgs for PFET Vd < Vs" M plowvt IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= plowvt_vtx)) THEN VG(*)-VS(*)=(plowvt_vgs_min_1, plowvt_vgs_max_1, plowvt_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2 plowvt Vgs for PFET Vd < Vs" M plowvt IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= plowvt_vtx)) THEN VG(*)-VS(*)=(plowvt_vgs_min_2, plowvt_vgs_max_2, plowvt_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: plowvt Vgs for PFET Vd < Vs" M plowvt IF (VD(*)-VS(*) <= 0)  THEN VG(*)-VS(*)=(plowvt_vgs_min, plowvt_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: plowvt Vbs for PFET Vd < Vs" M plowvt IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VD(*)=(plowvt_vbs_min, plowvt_vbs_max) ENDIF
***** plowvt VD > VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1 plowvt Vbd for PFET Vd > Vs" M plowvt IF ((VD(*)-VS(*) > 0) &&  (VG(*)-VD(*)<plowvt_vgs_min_1))  THEN VB(*)-VD(*)=(plowvt_vbs_min_1, plowvt_vbs_max_1, plowvt_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: plowvt Vbd for PFET Vd > Vs" M plowvt IF (VD(*)-VS(*) > 0)  THEN VB(*)-VD(*)=(plowvt_vbs_min, plowvt_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: plowvt Vsd for PFET Vd > Vs" M plowvt IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<plowvt_vtx))  THEN VS(*)-VD(*)=(plowvt_vds_min_1, plowvt_vds_max_1, plowvt_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: plowvt Vsd for PFET Vd > Vs" M plowvt IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<plowvt_vtx))  THEN VS(*)-VD(*)=(plowvt_vds_min_2, plowvt_vds_max_2, plowvt_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: plowvt Vsd for PFET Vd > Vs" M plowvt IF (VD(*)-VS(*) > 0)  THEN VS(*)-VD(*)=(plowvt_vds_min, plowvt_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: plowvt Vgd for PFET Vd > Vs" M plowvt IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < plowvt_vtx)) THEN VG(*)-VD(*)=(plowvt_vgs_min_1, plowvt_vgs_max_1, plowvt_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: plowvt Vgd for PFET Vd > Vs" M plowvt IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < plowvt_vtx)) THEN VG(*)-VD(*)=(plowvt_vgs_min_2, plowvt_vgs_max_2, plowvt_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: plowvt Vgd for PFET Vd > Vs" M plowvt IF (VD(*)-VS(*) > 0)  THEN VG(*)-VD(*)=(plowvt_vgs_min, plowvt_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: plowvt Vbd for PFET Vd > Vs" M plowvt IF (VD(*)-VS(*) > 0)  THEN VB(*)-VS(*)=(plowvt_vbs_min, plowvt_vbs_max) ENDIF
***** phighvt VD =< VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1 phighvt Vbs for PFET Vd < Vs" M phighvt IF ((VD(*)-VS(*) <= 0) &&  (VG(*)-VS(*)<phighvt_vgs_min_1))  THEN VB(*)-VS(*)=(phighvt_vbs_min_1, phighvt_vbs_max_1, phighvt_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: phighvt Vbs for PFET Vd < Vs" M phighvt IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VS(*)=(phighvt_vbs_min, phighvt_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: phighvt Vds for PFET Vd < Vs" M phighvt IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<phighvt_vtx))  THEN VD(*)-VS(*)=(phighvt_vds_min_1, phighvt_vds_max_1, phighvt_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: phighvt Vds for PFET Vd < Vs" M phighvt IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<phighvt_vtx))  THEN VD(*)-VS(*)=(phighvt_vds_min_2, phighvt_vds_max_2, phighvt_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: phighvt Vds for PFET Vd < Vs" M phighvt IF (VD(*)-VS(*) <= 0)  THEN VD(*)-VS(*)=(phighvt_vds_min, phighvt_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1 phighvt Vgs for PFET Vd < Vs" M phighvt IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= phighvt_vtx)) THEN VG(*)-VS(*)=(phighvt_vgs_min_1, phighvt_vgs_max_1, phighvt_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2 phighvt Vgs for PFET Vd < Vs" M phighvt IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= phighvt_vtx)) THEN VG(*)-VS(*)=(phighvt_vgs_min_2, phighvt_vgs_max_2, phighvt_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: phighvt Vgs for PFET Vd < Vs" M phighvt IF (VD(*)-VS(*) <= 0)  THEN VG(*)-VS(*)=(phighvt_vgs_min, phighvt_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: phighvt Vbs for PFET Vd < Vs" M phighvt IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VD(*)=(phighvt_vbs_min, phighvt_vbs_max) ENDIF
***** phighvt VD > VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1 phighvt Vbd for PFET Vd > Vs" M phighvt IF ((VD(*)-VS(*) > 0) &&  (VG(*)-VD(*)<phighvt_vgs_min_1))  THEN VB(*)-VD(*)=(phighvt_vbs_min_1, phighvt_vbs_max_1, phighvt_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: phighvt Vbd for PFET Vd > Vs" M phighvt IF (VD(*)-VS(*) > 0)  THEN VB(*)-VD(*)=(phighvt_vbs_min, phighvt_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: phighvt Vsd for PFET Vd > Vs" M phighvt IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<phighvt_vtx))  THEN VS(*)-VD(*)=(phighvt_vds_min_1, phighvt_vds_max_1, phighvt_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: phighvt Vsd for PFET Vd > Vs" M phighvt IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<phighvt_vtx))  THEN VS(*)-VD(*)=(phighvt_vds_min_2, phighvt_vds_max_2, phighvt_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: phighvt Vsd for PFET Vd > Vs" M phighvt IF (VD(*)-VS(*) > 0)  THEN VS(*)-VD(*)=(phighvt_vds_min, phighvt_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: phighvt Vgd for PFET Vd > Vs" M phighvt IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < phighvt_vtx)) THEN VG(*)-VD(*)=(phighvt_vgs_min_1, phighvt_vgs_max_1, phighvt_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: phighvt Vgd for PFET Vd > Vs" M phighvt IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < phighvt_vtx)) THEN VG(*)-VD(*)=(phighvt_vgs_min_2, phighvt_vgs_max_2, phighvt_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: phighvt Vgd for PFET Vd > Vs" M phighvt IF (VD(*)-VS(*) > 0)  THEN VG(*)-VD(*)=(phighvt_vgs_min, phighvt_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: phighvt Vbd for PFET Vd > Vs" M phighvt IF (VD(*)-VS(*) > 0)  THEN VB(*)-VS(*)=(phighvt_vbs_min, phighvt_vbs_max) ENDIF
***** nlowvt VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nlowvt Vbs for NFET Vd > Vs" M nlowvt IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nlowvt_vgs_max_1))  THEN VB(*)-VS(*)=(nlowvt_vbs_min_1, nlowvt_vbs_max_1, nlowvt_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nlowvt Vbs for NFET Vd > Vs" M nlowvt IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nlowvt_vbs_min, nlowvt_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nlowvt Vds for NFET Vd > Vs" M nlowvt IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nlowvt_vtx))  THEN VD(*)-VS(*)=(nlowvt_vds_min_1, nlowvt_vds_max_1, nlowvt_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nlowvt Vds for NFET Vd > Vs" M nlowvt IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nlowvt_vtx))  THEN VD(*)-VS(*)=(nlowvt_vds_min_2, nlowvt_vds_max_2, nlowvt_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nlowvt Vds for NFET Vd > Vs" M nlowvt IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nlowvt_vds_min, nlowvt_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nlowvt Vgs for NFET Vd > Vs" M nlowvt IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nlowvt_vtx)) THEN VG(*)-VS(*)=(nlowvt_vgs_min_1, nlowvt_vgs_max_1, nlowvt_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nlowvt Vgs for NFET Vd > Vs" M nlowvt IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nlowvt_vtx)) THEN VG(*)-VS(*)=(nlowvt_vgs_min_2, nlowvt_vgs_max_2, nlowvt_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nlowvt Vgs for NFET Vd > Vs" M nlowvt IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nlowvt_vgs_min, nlowvt_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nlowvt Vbs for NFET Vd > Vs" M nlowvt IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nlowvt_vbs_min, nlowvt_vbs_max) ENDIF
***** nlowvt VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nlowvt Vbd for NFET Vd < Vs" M nlowvt IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nlowvt_vgs_max_1))  THEN VB(*)-VD(*)=(nlowvt_vbs_min_1, nlowvt_vbs_max_1, nlowvt_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nlowvt Vbd for NFET Vd < Vs" M nlowvt IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nlowvt_vbs_min, nlowvt_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nlowvt Vsd for NFET Vd < Vs" M nlowvt IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nlowvt_vtx)) THEN VS(*)-VD(*)=(nlowvt_vds_min_1, nlowvt_vds_max_1, nlowvt_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nlowvt Vsd for NFET Vd < Vs" M nlowvt IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nlowvt_vtx)) THEN VS(*)-VD(*)=(nlowvt_vds_min_2, nlowvt_vds_max_2, nlowvt_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nlowvt Vsd for NFET Vd < Vs" M nlowvt IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nlowvt_vds_min, nlowvt_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nlowvt Vgd for NFET Vd < Vs" M nlowvt IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nlowvt_vtx)) THEN VG(*)-VD(*)=(nlowvt_vgs_min_1, nlowvt_vgs_max_1, nlowvt_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nlowvt Vgd for NFET Vd < Vs" M nlowvt IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nlowvt_vtx)) THEN VG(*)-VD(*)=(nlowvt_vgs_min_2, nlowvt_vgs_max_2, nlowvt_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nlowvt Vgd for NFET Vd < Vs" M nlowvt IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nlowvt_vgs_min, nlowvt_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nlowvt Vbd for NFET Vd < Vs" M nlowvt IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nlowvt_vbs_min, nlowvt_vbs_max) ENDIF
***** nlvtpass VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nlvtpass Vbs for NFET Vd > Vs" M nlvtpass IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nlvtpass_vgs_max_1))  THEN VB(*)-VS(*)=(nlvtpass_vbs_min_1, nlvtpass_vbs_max_1, nlvtpass_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nlvtpass Vbs for NFET Vd > Vs" M nlvtpass IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nlvtpass_vbs_min, nlvtpass_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nlvtpass Vds for NFET Vd > Vs" M nlvtpass IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nlvtpass_vtx))  THEN VD(*)-VS(*)=(nlvtpass_vds_min_1, nlvtpass_vds_max_1, nlvtpass_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nlvtpass Vds for NFET Vd > Vs" M nlvtpass IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nlvtpass_vtx))  THEN VD(*)-VS(*)=(nlvtpass_vds_min_2, nlvtpass_vds_max_2, nlvtpass_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nlvtpass Vds for NFET Vd > Vs" M nlvtpass IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nlvtpass_vds_min, nlvtpass_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nlvtpass Vgs for NFET Vd > Vs" M nlvtpass IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nlvtpass_vtx)) THEN VG(*)-VS(*)=(nlvtpass_vgs_min_1, nlvtpass_vgs_max_1, nlvtpass_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nlvtpass Vgs for NFET Vd > Vs" M nlvtpass IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nlvtpass_vtx)) THEN VG(*)-VS(*)=(nlvtpass_vgs_min_2, nlvtpass_vgs_max_2, nlvtpass_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nlvtpass Vgs for NFET Vd > Vs" M nlvtpass IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nlvtpass_vgs_min, nlvtpass_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nlvtpass Vbs for NFET Vd > Vs" M nlvtpass IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nlvtpass_vbs_min, nlvtpass_vbs_max) ENDIF
***** nlvtpass VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nlvtpass Vbd for NFET Vd < Vs" M nlvtpass IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nlvtpass_vgs_max_1))  THEN VB(*)-VD(*)=(nlvtpass_vbs_min_1, nlvtpass_vbs_max_1, nlvtpass_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nlvtpass Vbd for NFET Vd < Vs" M nlvtpass IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nlvtpass_vbs_min, nlvtpass_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nlvtpass Vsd for NFET Vd < Vs" M nlvtpass IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nlvtpass_vtx)) THEN VS(*)-VD(*)=(nlvtpass_vds_min_1, nlvtpass_vds_max_1, nlvtpass_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nlvtpass Vsd for NFET Vd < Vs" M nlvtpass IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nlvtpass_vtx)) THEN VS(*)-VD(*)=(nlvtpass_vds_min_2, nlvtpass_vds_max_2, nlvtpass_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nlvtpass Vsd for NFET Vd < Vs" M nlvtpass IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nlvtpass_vds_min, nlvtpass_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nlvtpass Vgd for NFET Vd < Vs" M nlvtpass IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nlvtpass_vtx)) THEN VG(*)-VD(*)=(nlvtpass_vgs_min_1, nlvtpass_vgs_max_1, nlvtpass_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nlvtpass Vgd for NFET Vd < Vs" M nlvtpass IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nlvtpass_vtx)) THEN VG(*)-VD(*)=(nlvtpass_vgs_min_2, nlvtpass_vgs_max_2, nlvtpass_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nlvtpass Vgd for NFET Vd < Vs" M nlvtpass IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nlvtpass_vgs_min, nlvtpass_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nlvtpass Vbd for NFET Vd < Vs" M nlvtpass IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nlvtpass_vbs_min, nlvtpass_vbs_max) ENDIF
***** nhvesd VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nhvesd Vbs for NFET Vd > Vs" M nhvesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvesd_vgs_max_1))  THEN VB(*)-VS(*)=(nhvesd_vbs_min_1, nhvesd_vbs_max_1, nhvesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhvesd Vbs for NFET Vd > Vs" M nhvesd IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nhvesd_vbs_min, nhvesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nhvesd Vds for NFET Vd > Vs" M nhvesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvesd_vtx))  THEN VD(*)-VS(*)=(nhvesd_vds_min_1, nhvesd_vds_max_1, nhvesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nhvesd Vds for NFET Vd > Vs" M nhvesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvesd_vtx))  THEN VD(*)-VS(*)=(nhvesd_vds_min_2, nhvesd_vds_max_2, nhvesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nhvesd Vds for NFET Vd > Vs" M nhvesd IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nhvesd_vds_min, nhvesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nhvesd Vgs for NFET Vd > Vs" M nhvesd IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhvesd_vtx)) THEN VG(*)-VS(*)=(nhvesd_vgs_min_1, nhvesd_vgs_max_1, nhvesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nhvesd Vgs for NFET Vd > Vs" M nhvesd IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhvesd_vtx)) THEN VG(*)-VS(*)=(nhvesd_vgs_min_2, nhvesd_vgs_max_2, nhvesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nhvesd Vgs for NFET Vd > Vs" M nhvesd IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nhvesd_vgs_min, nhvesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhvesd Vbs for NFET Vd > Vs" M nhvesd IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nhvesd_vbs_min, nhvesd_vbs_max) ENDIF
***** nhvesd VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nhvesd Vbd for NFET Vd < Vs" M nhvesd IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nhvesd_vgs_max_1))  THEN VB(*)-VD(*)=(nhvesd_vbs_min_1, nhvesd_vbs_max_1, nhvesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhvesd Vbd for NFET Vd < Vs" M nhvesd IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nhvesd_vbs_min, nhvesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nhvesd Vsd for NFET Vd < Vs" M nhvesd IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhvesd_vtx)) THEN VS(*)-VD(*)=(nhvesd_vds_min_1, nhvesd_vds_max_1, nhvesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nhvesd Vsd for NFET Vd < Vs" M nhvesd IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhvesd_vtx)) THEN VS(*)-VD(*)=(nhvesd_vds_min_2, nhvesd_vds_max_2, nhvesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nhvesd Vsd for NFET Vd < Vs" M nhvesd IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nhvesd_vds_min, nhvesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nhvesd Vgd for NFET Vd < Vs" M nhvesd IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhvesd_vtx)) THEN VG(*)-VD(*)=(nhvesd_vgs_min_1, nhvesd_vgs_max_1, nhvesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nhvesd Vgd for NFET Vd < Vs" M nhvesd IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhvesd_vtx)) THEN VG(*)-VD(*)=(nhvesd_vgs_min_2, nhvesd_vgs_max_2, nhvesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nhvesd Vgd for NFET Vd < Vs" M nhvesd IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nhvesd_vgs_min, nhvesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhvesd Vbd for NFET Vd < Vs" M nhvesd IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nhvesd_vbs_min, nhvesd_vbs_max) ENDIF
***** phvesd VD =< VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1 phvesd Vbs for PFET Vd < Vs" M phvesd IF ((VD(*)-VS(*) <= 0) &&  (VG(*)-VS(*)<phvesd_vgs_min_1))  THEN VB(*)-VS(*)=(phvesd_vbs_min_1, phvesd_vbs_max_1, phvesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: phvesd Vbs for PFET Vd < Vs" M phvesd IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VS(*)=(phvesd_vbs_min, phvesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: phvesd Vds for PFET Vd < Vs" M phvesd IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<phvesd_vtx))  THEN VD(*)-VS(*)=(phvesd_vds_min_1, phvesd_vds_max_1, phvesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: phvesd Vds for PFET Vd < Vs" M phvesd IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<phvesd_vtx))  THEN VD(*)-VS(*)=(phvesd_vds_min_2, phvesd_vds_max_2, phvesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: phvesd Vds for PFET Vd < Vs" M phvesd IF (VD(*)-VS(*) <= 0)  THEN VD(*)-VS(*)=(phvesd_vds_min, phvesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1 phvesd Vgs for PFET Vd < Vs" M phvesd IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= phvesd_vtx)) THEN VG(*)-VS(*)=(phvesd_vgs_min_1, phvesd_vgs_max_1, phvesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2 phvesd Vgs for PFET Vd < Vs" M phvesd IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= phvesd_vtx)) THEN VG(*)-VS(*)=(phvesd_vgs_min_2, phvesd_vgs_max_2, phvesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: phvesd Vgs for PFET Vd < Vs" M phvesd IF (VD(*)-VS(*) <= 0)  THEN VG(*)-VS(*)=(phvesd_vgs_min, phvesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: phvesd Vbs for PFET Vd < Vs" M phvesd IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VD(*)=(phvesd_vbs_min, phvesd_vbs_max) ENDIF
***** phvesd VD > VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1 phvesd Vbd for PFET Vd > Vs" M phvesd IF ((VD(*)-VS(*) > 0) &&  (VG(*)-VD(*)<phvesd_vgs_min_1))  THEN VB(*)-VD(*)=(phvesd_vbs_min_1, phvesd_vbs_max_1, phvesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: phvesd Vbd for PFET Vd > Vs" M phvesd IF (VD(*)-VS(*) > 0)  THEN VB(*)-VD(*)=(phvesd_vbs_min, phvesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: phvesd Vsd for PFET Vd > Vs" M phvesd IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<phvesd_vtx))  THEN VS(*)-VD(*)=(phvesd_vds_min_1, phvesd_vds_max_1, phvesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: phvesd Vsd for PFET Vd > Vs" M phvesd IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<phvesd_vtx))  THEN VS(*)-VD(*)=(phvesd_vds_min_2, phvesd_vds_max_2, phvesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: phvesd Vsd for PFET Vd > Vs" M phvesd IF (VD(*)-VS(*) > 0)  THEN VS(*)-VD(*)=(phvesd_vds_min, phvesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: phvesd Vgd for PFET Vd > Vs" M phvesd IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < phvesd_vtx)) THEN VG(*)-VD(*)=(phvesd_vgs_min_1, phvesd_vgs_max_1, phvesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: phvesd Vgd for PFET Vd > Vs" M phvesd IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < phvesd_vtx)) THEN VG(*)-VD(*)=(phvesd_vgs_min_2, phvesd_vgs_max_2, phvesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: phvesd Vgd for PFET Vd > Vs" M phvesd IF (VD(*)-VS(*) > 0)  THEN VG(*)-VD(*)=(phvesd_vgs_min, phvesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: phvesd Vbd for PFET Vd > Vs" M phvesd IF (VD(*)-VS(*) > 0)  THEN VB(*)-VS(*)=(phvesd_vbs_min, phvesd_vbs_max) ENDIF
***** ntvnative VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: ntvnative Vbs for NFET Vd > Vs" M ntvnative IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>ntvnative_vgs_max_1))  THEN VB(*)-VS(*)=(ntvnative_vbs_min_1, ntvnative_vbs_max_1, ntvnative_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: ntvnative Vbs for NFET Vd > Vs" M ntvnative IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(ntvnative_vbs_min, ntvnative_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: ntvnative Vds for NFET Vd > Vs" M ntvnative IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>ntvnative_vtx))  THEN VD(*)-VS(*)=(ntvnative_vds_min_1, ntvnative_vds_max_1, ntvnative_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: ntvnative Vds for NFET Vd > Vs" M ntvnative IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>ntvnative_vtx))  THEN VD(*)-VS(*)=(ntvnative_vds_min_2, ntvnative_vds_max_2, ntvnative_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: ntvnative Vds for NFET Vd > Vs" M ntvnative IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(ntvnative_vds_min, ntvnative_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: ntvnative Vgs for NFET Vd > Vs" M ntvnative IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= ntvnative_vtx)) THEN VG(*)-VS(*)=(ntvnative_vgs_min_1, ntvnative_vgs_max_1, ntvnative_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: ntvnative Vgs for NFET Vd > Vs" M ntvnative IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= ntvnative_vtx)) THEN VG(*)-VS(*)=(ntvnative_vgs_min_2, ntvnative_vgs_max_2, ntvnative_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: ntvnative Vgs for NFET Vd > Vs" M ntvnative IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(ntvnative_vgs_min, ntvnative_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: ntvnative Vbs for NFET Vd > Vs" M ntvnative IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(ntvnative_vbs_min, ntvnative_vbs_max) ENDIF
***** ntvnative VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: ntvnative Vbd for NFET Vd < Vs" M ntvnative IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>ntvnative_vgs_max_1))  THEN VB(*)-VD(*)=(ntvnative_vbs_min_1, ntvnative_vbs_max_1, ntvnative_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: ntvnative Vbd for NFET Vd < Vs" M ntvnative IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(ntvnative_vbs_min, ntvnative_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: ntvnative Vsd for NFET Vd < Vs" M ntvnative IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>ntvnative_vtx)) THEN VS(*)-VD(*)=(ntvnative_vds_min_1, ntvnative_vds_max_1, ntvnative_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: ntvnative Vsd for NFET Vd < Vs" M ntvnative IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>ntvnative_vtx)) THEN VS(*)-VD(*)=(ntvnative_vds_min_2, ntvnative_vds_max_2, ntvnative_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: ntvnative Vsd for NFET Vd < Vs" M ntvnative IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(ntvnative_vds_min, ntvnative_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: ntvnative Vgd for NFET Vd < Vs" M ntvnative IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > ntvnative_vtx)) THEN VG(*)-VD(*)=(ntvnative_vgs_min_1, ntvnative_vgs_max_1, ntvnative_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: ntvnative Vgd for NFET Vd < Vs" M ntvnative IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > ntvnative_vtx)) THEN VG(*)-VD(*)=(ntvnative_vgs_min_2, ntvnative_vgs_max_2, ntvnative_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: ntvnative Vgd for NFET Vd < Vs" M ntvnative IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(ntvnative_vgs_min, ntvnative_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: ntvnative Vbd for NFET Vd < Vs" M ntvnative IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(ntvnative_vbs_min, ntvnative_vbs_max) ENDIF
***** nhvnative VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nhvnative Vbs for NFET Vd > Vs" M nhvnative IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvnative_vgs_max_1))  THEN VB(*)-VS(*)=(nhvnative_vbs_min_1, nhvnative_vbs_max_1, nhvnative_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhvnative Vbs for NFET Vd > Vs" M nhvnative IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nhvnative_vbs_min, nhvnative_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nhvnative Vds for NFET Vd > Vs" M nhvnative IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvnative_vtx))  THEN VD(*)-VS(*)=(nhvnative_vds_min_1, nhvnative_vds_max_1, nhvnative_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nhvnative Vds for NFET Vd > Vs" M nhvnative IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvnative_vtx))  THEN VD(*)-VS(*)=(nhvnative_vds_min_2, nhvnative_vds_max_2, nhvnative_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nhvnative Vds for NFET Vd > Vs" M nhvnative IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nhvnative_vds_min, nhvnative_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nhvnative Vgs for NFET Vd > Vs" M nhvnative IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhvnative_vtx)) THEN VG(*)-VS(*)=(nhvnative_vgs_min_1, nhvnative_vgs_max_1, nhvnative_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nhvnative Vgs for NFET Vd > Vs" M nhvnative IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhvnative_vtx)) THEN VG(*)-VS(*)=(nhvnative_vgs_min_2, nhvnative_vgs_max_2, nhvnative_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nhvnative Vgs for NFET Vd > Vs" M nhvnative IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nhvnative_vgs_min, nhvnative_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhvnative Vbs for NFET Vd > Vs" M nhvnative IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nhvnative_vbs_min, nhvnative_vbs_max) ENDIF
***** nhvnative VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nhvnative Vbd for NFET Vd < Vs" M nhvnative IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nhvnative_vgs_max_1))  THEN VB(*)-VD(*)=(nhvnative_vbs_min_1, nhvnative_vbs_max_1, nhvnative_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhvnative Vbd for NFET Vd < Vs" M nhvnative IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nhvnative_vbs_min, nhvnative_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nhvnative Vsd for NFET Vd < Vs" M nhvnative IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhvnative_vtx)) THEN VS(*)-VD(*)=(nhvnative_vds_min_1, nhvnative_vds_max_1, nhvnative_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nhvnative Vsd for NFET Vd < Vs" M nhvnative IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhvnative_vtx)) THEN VS(*)-VD(*)=(nhvnative_vds_min_2, nhvnative_vds_max_2, nhvnative_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nhvnative Vsd for NFET Vd < Vs" M nhvnative IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nhvnative_vds_min, nhvnative_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nhvnative Vgd for NFET Vd < Vs" M nhvnative IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhvnative_vtx)) THEN VG(*)-VD(*)=(nhvnative_vgs_min_1, nhvnative_vgs_max_1, nhvnative_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nhvnative Vgd for NFET Vd < Vs" M nhvnative IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhvnative_vtx)) THEN VG(*)-VD(*)=(nhvnative_vgs_min_2, nhvnative_vgs_max_2, nhvnative_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nhvnative Vgd for NFET Vd < Vs" M nhvnative IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nhvnative_vgs_min, nhvnative_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhvnative Vbd for NFET Vd < Vs" M nhvnative IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nhvnative_vbs_min, nhvnative_vbs_max) ENDIF
***** nhvnativeesd VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nhvnativeesd Vbs for NFET Vd > Vs" M nhvnativeesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvnativeesd_vgs_max_1))  THEN VB(*)-VS(*)=(nhvnativeesd_vbs_min_1, nhvnativeesd_vbs_max_1, nhvnativeesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhvnativeesd Vbs for NFET Vd > Vs" M nhvnativeesd IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nhvnativeesd_vbs_min, nhvnativeesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nhvnativeesd Vds for NFET Vd > Vs" M nhvnativeesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvnativeesd_vtx))  THEN VD(*)-VS(*)=(nhvnativeesd_vds_min_1, nhvnativeesd_vds_max_1, nhvnativeesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nhvnativeesd Vds for NFET Vd > Vs" M nhvnativeesd IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhvnativeesd_vtx))  THEN VD(*)-VS(*)=(nhvnativeesd_vds_min_2, nhvnativeesd_vds_max_2, nhvnativeesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nhvnativeesd Vds for NFET Vd > Vs" M nhvnativeesd IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nhvnativeesd_vds_min, nhvnativeesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nhvnativeesd Vgs for NFET Vd > Vs" M nhvnativeesd IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhvnativeesd_vtx)) THEN VG(*)-VS(*)=(nhvnativeesd_vgs_min_1, nhvnativeesd_vgs_max_1, nhvnativeesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nhvnativeesd Vgs for NFET Vd > Vs" M nhvnativeesd IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhvnativeesd_vtx)) THEN VG(*)-VS(*)=(nhvnativeesd_vgs_min_2, nhvnativeesd_vgs_max_2, nhvnativeesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nhvnativeesd Vgs for NFET Vd > Vs" M nhvnativeesd IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nhvnativeesd_vgs_min, nhvnativeesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhvnativeesd Vbs for NFET Vd > Vs" M nhvnativeesd IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nhvnativeesd_vbs_min, nhvnativeesd_vbs_max) ENDIF
***** nhvnativeesd VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nhvnativeesd Vbd for NFET Vd < Vs" M nhvnativeesd IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nhvnativeesd_vgs_max_1))  THEN VB(*)-VD(*)=(nhvnativeesd_vbs_min_1, nhvnativeesd_vbs_max_1, nhvnativeesd_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhvnativeesd Vbd for NFET Vd < Vs" M nhvnativeesd IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nhvnativeesd_vbs_min, nhvnativeesd_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nhvnativeesd Vsd for NFET Vd < Vs" M nhvnativeesd IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhvnativeesd_vtx)) THEN VS(*)-VD(*)=(nhvnativeesd_vds_min_1, nhvnativeesd_vds_max_1, nhvnativeesd_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nhvnativeesd Vsd for NFET Vd < Vs" M nhvnativeesd IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhvnativeesd_vtx)) THEN VS(*)-VD(*)=(nhvnativeesd_vds_min_2, nhvnativeesd_vds_max_2, nhvnativeesd_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nhvnativeesd Vsd for NFET Vd < Vs" M nhvnativeesd IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nhvnativeesd_vds_min, nhvnativeesd_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nhvnativeesd Vgd for NFET Vd < Vs" M nhvnativeesd IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhvnativeesd_vtx)) THEN VG(*)-VD(*)=(nhvnativeesd_vgs_min_1, nhvnativeesd_vgs_max_1, nhvnativeesd_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nhvnativeesd Vgd for NFET Vd < Vs" M nhvnativeesd IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhvnativeesd_vtx)) THEN VG(*)-VD(*)=(nhvnativeesd_vgs_min_2, nhvnativeesd_vgs_max_2, nhvnativeesd_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nhvnativeesd Vgd for NFET Vd < Vs" M nhvnativeesd IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nhvnativeesd_vgs_min, nhvnativeesd_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhvnativeesd Vbd for NFET Vd < Vs" M nhvnativeesd IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nhvnativeesd_vbs_min, nhvnativeesd_vbs_max) ENDIF
***** nhv VD >= VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1: nhv Vbs for NFET Vd > Vs" M nhv IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhv_vgs_max_1))  THEN VB(*)-VS(*)=(nhv_vbs_min_1, nhv_vbs_max_1, nhv_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhv Vbs for NFET Vd > Vs" M nhv IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VS(*)=(nhv_vbs_min, nhv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: nhv Vds for NFET Vd > Vs" M nhv IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhv_vtx))  THEN VD(*)-VS(*)=(nhv_vds_min_1, nhv_vds_max_1, nhv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nhv Vds for NFET Vd > Vs" M nhv IF ((VD(*)-VS(*) >= 0) &&  (VG(*)-VS(*)>nhv_vtx))  THEN VD(*)-VS(*)=(nhv_vds_min_2, nhv_vds_max_2, nhv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nhv Vds for NFET Vd > Vs" M nhv IF (VD(*)-VS(*) >= 0)  THEN VD(*)-VS(*)=(nhv_vds_min, nhv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nhv Vgs for NFET Vd > Vs" M nhv IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhv_vtx)) THEN VG(*)-VS(*)=(nhv_vgs_min_1, nhv_vgs_max_1, nhv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nhv Vgs for NFET Vd > Vs" M nhv IF ((VD(*)-VS(*) >= 0) && (VD(*)-VS(*) >= nhv_vtx)) THEN VG(*)-VS(*)=(nhv_vgs_min_2, nhv_vgs_max_2, nhv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nhv Vgs for NFET Vd > Vs" M nhv IF (VD(*)-VS(*) >= 0)  THEN VG(*)-VS(*)=(nhv_vgs_min, nhv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhv Vbs for NFET Vd > Vs" M nhv IF (VD(*)-VS(*) >= 0)  THEN VB(*)-VD(*)=(nhv_vbs_min, nhv_vbs_max) ENDIF
***** nhv VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1: nhv Vbd for NFET Vd < Vs" M nhv IF ((VD(*)-VS(*) < 0) &&  (VG(*)-VD(*)>nhv_vgs_max_1))  THEN VB(*)-VD(*)=(nhv_vbs_min_1, nhv_vbs_max_1, nhv_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nhv Vbd for NFET Vd < Vs" M nhv IF (VD(*)-VS(*) < 0)  THEN VB(*)-VD(*)=(nhv_vbs_min, nhv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: nhv Vsd for NFET Vd < Vs" M nhv IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhv_vtx)) THEN VS(*)-VD(*)=(nhv_vds_min_1, nhv_vds_max_1, nhv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nhv Vsd for NFET Vd < Vs" M nhv IF ((VD(*)-VS(*) < 0) && (VG(*)-VD(*)>nhv_vtx)) THEN VS(*)-VD(*)=(nhv_vds_min_2, nhv_vds_max_2, nhv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nhv Vsd for NFET Vd < Vs" M nhv IF (VD(*)-VS(*) < 0)  THEN VS(*)-VD(*)=(nhv_vds_min, nhv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nhv Vgd for NFET Vd < Vs" M nhv IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhv_vtx)) THEN VG(*)-VD(*)=(nhv_vgs_min_1, nhv_vgs_max_1, nhv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nhv Vgd for NFET Vd < Vs" M nhv IF ((VD(*)-VS(*) < 0) && (VS(*)-VD(*) > nhv_vtx)) THEN VG(*)-VD(*)=(nhv_vgs_min_2, nhv_vgs_max_2, nhv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nhv Vgd for NFET Vd < Vs" M nhv IF (VD(*)-VS(*) < 0)  THEN VG(*)-VD(*)=(nhv_vgs_min, nhv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nhv Vbd for NFET Vd < Vs" M nhv IF (VD(*)-VS(*) < 0)  THEN VB(*)-VS(*)=(nhv_vbs_min, nhv_vbs_max) ENDIF
***** phv VD =< VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBS_1 phv Vbs for PFET Vd < Vs" M phv IF ((VD(*)-VS(*) <= 0) &&  (VG(*)-VS(*)<phv_vgs_min_1))  THEN VB(*)-VS(*)=(phv_vbs_min_1, phv_vbs_max_1, phv_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: phv Vbs for PFET Vd < Vs" M phv IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VS(*)=(phv_vbs_min, phv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_1: phv Vds for PFET Vd < Vs" M phv IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<phv_vtx))  THEN VD(*)-VS(*)=(phv_vds_min_1, phv_vds_max_1, phv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: phv Vds for PFET Vd < Vs" M phv IF ((VD(*)-VS(*) <= 0) && (VG(*)-VS(*)<phv_vtx))  THEN VD(*)-VS(*)=(phv_vds_min_2, phv_vds_max_2, phv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: phv Vds for PFET Vd < Vs" M phv IF (VD(*)-VS(*) <= 0)  THEN VD(*)-VS(*)=(phv_vds_min, phv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1 phv Vgs for PFET Vd < Vs" M phv IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= phv_vtx)) THEN VG(*)-VS(*)=(phv_vgs_min_1, phv_vgs_max_1, phv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2 phv Vgs for PFET Vd < Vs" M phv IF ((VD(*)-VS(*) <= 0) && (VD(*)-VS(*) <= phv_vtx)) THEN VG(*)-VS(*)=(phv_vgs_min_2, phv_vgs_max_2, phv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: phv Vgs for PFET Vd < Vs" M phv IF (VD(*)-VS(*) <= 0)  THEN VG(*)-VS(*)=(phv_vgs_min, phv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: phv Vbs for PFET Vd < Vs" M phv IF (VD(*)-VS(*) <= 0)  THEN VB(*)-VD(*)=(phv_vbs_min, phv_vbs_max) ENDIF
***** phv VD > VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VBD_1 phv Vbd for PFET Vd > Vs" M phv IF ((VD(*)-VS(*) > 0) &&  (VG(*)-VD(*)<phv_vgs_min_1))  THEN VB(*)-VD(*)=(phv_vbs_min_1, phv_vbs_max_1, phv_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: phv Vbd for PFET Vd > Vs" M phv IF (VD(*)-VS(*) > 0)  THEN VB(*)-VD(*)=(phv_vbs_min, phv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_1: phv Vsd for PFET Vd > Vs" M phv IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<phv_vtx))  THEN VS(*)-VD(*)=(phv_vds_min_1, phv_vds_max_1, phv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: phv Vsd for PFET Vd > Vs" M phv IF ((VD(*)-VS(*) > 0) && (VG(*)-VD(*)<phv_vtx))  THEN VS(*)-VD(*)=(phv_vds_min_2, phv_vds_max_2, phv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: phv Vsd for PFET Vd > Vs" M phv IF (VD(*)-VS(*) > 0)  THEN VS(*)-VD(*)=(phv_vds_min, phv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: phv Vgd for PFET Vd > Vs" M phv IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < phv_vtx)) THEN VG(*)-VD(*)=(phv_vgs_min_1, phv_vgs_max_1, phv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: phv Vgd for PFET Vd > Vs" M phv IF ((VD(*)-VS(*) > 0) && (VS(*)-VD(*) < phv_vtx)) THEN VG(*)-VD(*)=(phv_vgs_min_2, phv_vgs_max_2, phv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: phv Vgd for PFET Vd > Vs" M phv IF (VD(*)-VS(*) > 0)  THEN VG(*)-VD(*)=(phv_vgs_min, phv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: phv Vbd for PFET Vd > Vs" M phv IF (VD(*)-VS(*) > 0)  THEN VB(*)-VS(*)=(phv_vbs_min, phv_vbs_max) ENDIF
***** nvhv VD >= VS CHECKS *****NOTE: NVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: nvhv Vds for NFET Vd > Vs"  E SUBCKT = nvhv IF ((v(d,s) >= 0) &&  (v(g,s) > nvhv_vtx))  THEN v(d,s) = (nvhv_vds_min_1, nvhv_vds_max_1, nvhv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: nvhv Vds for NFET Vd > Vs"  E SUBCKT = nvhv IF ((v(d,s) >= 0) &&  (v(g,s) > nvhv_vtx))  THEN v(d,s) = (nvhv_vds_min_2, nvhv_vds_max_2, nvhv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: nvhv Vds for NFET Vd > Vs"  E SUBCKT = nvhv IF (v(d,s) >= 0)  THEN v(d,s) = (nvhv_vds_min, nvhv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: nvhv Vbs for NFET Vd > Vs" E SUBCKT = nvhv IF ((v(d,s) >= 0) &&  (v(g,s) > nvhv_vgs_max_1))  THEN v(b,s)=(nvhv_vbs_min_1, nvhv_vbs_max_1, nvhv_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nvhv Vbs for NFET Vd > Vs" E SUBCKT = nvhv IF (v(d,s) >= 0) THEN v(b,s)=(nvhv_vbs_min, nvhv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: nvhv Vgs for NFET Vd > Vs" E SUBCKT = nvhv IF ((v(d,s) >= 0) && (v(d,s) >= nvhv_vtx)) THEN v(g,s) = (nvhv_vgs_min_1, nvhv_vgs_max_1, nvhv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: nvhv Vgs for NFET Vd > Vs" E SUBCKT = nvhv IF ((v(d,s) >= 0) && (v(d,s) >= nvhv_vtx)) THEN v(g,s) = (nvhv_vgs_min_2, nvhv_vgs_max_2, nvhv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: nvhv Vgs for NFET Vd > Vs" E SUBCKT = nvhv IF (v(d,s) >= 0)  THEN v(g,s) = (nvhv_vgs_min, nvhv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nvhv Vbs for NFET Vd > Vs" E SUBCKT = nvhv IF (v(d,s) >= 0)  THEN v(b,d) = (-12.001, 0.501) ENDIF
***** nvhv VD < VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VSD_1: nvhv Vsd for NFET Vd < Vs" E SUBCKT = nvhv IF ((v(d,s) < 0) && (v(g,d) >nvhv_vtx)) THEN v(s,d) =(nhv_vds_min_1, nhv_vds_max_1, nhv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: nvhv Vsd for NFET Vd < Vs" E SUBCKT = nvhv IF ((v(d,s) < 0) && (v(g,d) >nvhv_vtx)) THEN v(s,d) =(nhv_vds_min_2, nhv_vds_max_2, nhv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: nvhv Vsd for NFET Vd < Vs" E SUBCKT = nvhv IF (v(d,s) < 0)  THEN v(s,d) =(nhv_vds_min, nhv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: nvhv Vbd for NFET Vd < Vs" E SUBCKT = nvhv IF (v(d,s) < 0)  THEN v(b,d)= (nvhv_vbs_min, nvhv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: nvhv Vgd for NFET Vd < Vs" E SUBCKT = nvhv IF ((v(d,s) < 0) && (v(s,d) > nvhv_vtx)) THEN v(g,d) = (nvhv_vgs_min_1, nvhv_vgs_max_1, nvhv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: nvhv Vgd for NFET Vd < Vs"  E SUBCKT =nvhv IF ((v(d,s) < 0) && (v(s,d) > nvhv_vtx)) THEN v(g,d) = (nvhv_vgs_min_2, nvhv_vgs_max_2, nvhv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: nvhv Vgd for NFET Vd < Vs" E SUBCKT = nvhv IF (v(d,s) < 0)  THEN v(g,d) = (nvhv_vgs_min, nvhv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: nvhv Vbd for NFET Vd < Vs" E SUBCKT = nvhv IF (v(d,s) < 0)  THEN v(b,s) = (nvhv_vbs_min, nvhv_vbs_max) ENDIF
***** pvhv VD =< VS CHECKS *****NOTE: PVHV device is a subcircuit
.SETSOA LABEL="MODEL_OOB_VDS_1: pvhv Vds for PFET Vd < Vs" E SUBCKT = pvhv IF ((v(d,s) <= 0) && (v(g,s) < pvhv_vtx)) THEN v(d,s)=(pvhv_vds_min_1, pvhv_vds_max_1, pvhv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_2: pvhv Vds for PFET Vd < Vs" E SUBCKT = pvhv IF ((v(d,s) <= 0) && (v(g,s) < pvhv_vtx)) THEN v(d,s)=(pvhv_vds_min_2, pvhv_vds_max_2, pvhv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS: pvhv Vds for PFET Vd < Vs" E SUBCKT = pvhv IF ((v(d,s) <= 0) && (v(g,s) < pvhv_vtx)) THEN v(d,s)=(pvhv_vds_min, pvhv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS_1: pvhv Vbs for PFET Vd < Vs" E SUBCKT = pvhv IF (v(d,s) <= 0) THEN v(b,s)=(pvhv_vbs_min_1, pvhv_vbs_max_1, pvhv_tmax_vbs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: pvhv Vbd for PFET Vd < Vs" E SUBCKT = pvhv IF (v(d,s) <= 0) THEN v(b,s)=(pvhv_vbs_min, pvhv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_1: pvhv Vgs for PFET Vd < Vs" E SUBCKT = pvhv IF ((v(d,s) <= 0) && (v(d,s) < pvhv_vtx)) THEN v(g,s)=(pvhv_vgs_min_1, pvhv_vgs_max_1 , pvhv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS_2: pvhv Vgs for PFET Vd < Vs" E SUBCKT = pvhv IF ((v(d,s) <= 0) && (v(d,s) < pvhv_vtx)) THEN v(g,s)=(pvhv_vgs_min_2, pvhv_vgs_max_2 , pvhv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGS: pvhv Vgs for PFET Vd < Vs" E SUBCKT = pvhv IF (v(d,s) <= 0)  THEN v(g,s)=(pvhv_vgs_min, pvhv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: pvhv Vbd for PFET Vd < Vs" E SUBCKT = pvhv IF (v(d,s) <= 0) THEN v(b,d)=(-0.501, 16.001) ENDIF
***** pvhv VD > VS CHECKS *****
.SETSOA LABEL="MODEL_OOB_VSD_1: pvhv Vsd for PFET Vd > Vs" E SUBCKT = pvhv IF ((v(d,s) > 0) && (v(g,d) < pvhv_vtx)) THEN v(s,d)=(phv_vds_min_1, phv_vds_max_1, phv_tmax_vds_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD_2: pvhv Vsd for PFET Vd > Vs" E SUBCKT = pvhv IF ((v(d,s) > 0) && (v(g,d) < pvhv_vtx)) THEN v(s,d)=(phv_vds_min_2, phv_vds_max_2, phv_tmax_vds_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VSD: pvhv Vsd for PFET Vd > Vs" E SUBCKT = pvhv IF (v(d,s) > 0) THEN v(s,d)=(phv_vds_min, phv_vds_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBD: pvhv Vbd for PFET Vd > Vs" E SUBCKT = pvhv IF (v(d,s) > 0) THEN v(b,d)=(pvhv_vbs_min, pvhv_vbs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_1: pvhv Vgd for PFET Vd > Vs" E SUBCKT = pvhv IF ((v(d,s) > 0) && (v(s,d) < pvhv_vtx)) THEN v(g,d)=(pvhv_vgs_min_1, pvhv_vgs_max_1, pvhv_tmax_vgs_1) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD_2: pvhv Vgd for PFET Vd > Vs" E SUBCKT = pvhv IF ((v(d,s) > 0) && (v(s,d) < pvhv_vtx)) THEN v(g,d)=(pvhv_vgs_min_2, pvhv_vgs_max_2, pvhv_tmax_vgs_2) ENDIF
.SETSOA LABEL="MODEL_OOB_VGD: pvhv Vgd for PFET Vd > Vs" E SUBCKT = pvhv IF (v(d,s) > 0) THEN v(g,d)=(pvhv_vgs_min, pvhv_vgs_max) ENDIF
.SETSOA LABEL="MODEL_OOB_VBS: pvhv Vbs for PFET Vd > Vs" E SUBCKT = pvhv IF (v(d,s) > 0) THEN v(b,s)=(pvhv_vbs_min, pvhv_vbs_max) ENDIF
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp8p6x7p9 Voltage for VPP" E SUBCKT = xcmvpp8p6x7p9 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp4p4x4p6 Voltage for VPP" E SUBCKT = xcmvpp4p4x4p6 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp11p5x11p7 Voltage for VPP" E SUBCKT = xcmvpp11p5x11p7 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp1p8x1p8 Voltage for VPP" E SUBCKT = xcmvpp1p8x1p8 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp8p6x7p9_lishield Voltage for VPP" E SUBCKT = xcmvpp8p6x7p9_lishield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp4p4x4p6_lishield Voltage for VPP" E SUBCKT = xcmvpp4p4x4p6_lishield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp11p5x11p7_lishield Voltage for VPP" E SUBCKT = xcmvpp11p5x11p7_lishield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp8p6x7p9_m3shield Voltage for VPP" E SUBCKT = xcmvpp8p6x7p9_m3shield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp4p4x4p6_m3shield Voltage for VPP" E SUBCKT = xcmvpp4p4x4p6_m3shield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp11p5x11p7_m3shield Voltage for VPP" E SUBCKT = xcmvpp11p5x11p7_m3shield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp1p8x1p8_m3shield Voltage for VPP" E SUBCKT = xcmvpp1p8x1p8_m3shield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp Voltage for VPP" E SUBCKT = xcmvpp v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp_2 Voltage for VPP" E SUBCKT = xcmvpp_2 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp2_nhvnative10x4 Voltage for VPP" E SUBCKT = xcmvpp2_nhvnative10x4 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp2_phv5x4 Voltage for VPP" E SUBCKT = xcmvpp2_phv5x4 v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp8p6x7p9_m3_lishield Voltage for VPP" E SUBCKT = xcmvpp8p6x7p9_m3_lishield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp4p4x4p6_m3_lishield Voltage for VPP" E SUBCKT = xcmvpp4p4x4p6_m3_lishield v(c0, c1) =(vpp_min, vpp_max)
*****
.SETSOA LABEL="VPP_MODEL_OOB: xcmvpp11p5x11p7_m3_lishield Voltage for VPP" E SUBCKT = xcmvpp11p5x11p7_m3_lishield v(c0, c1) =(vpp_min, vpp_max)
**************************************************************************************
*****VHV Reverse Checks to avoid model limitations (MRS-2179, PED memo)***************
**************************************************************************************
.param
+nvhv_vds_reversemin = '-0.5'
+pvhv_vds_reversemax_abovevth = '0.5'
+pvhv_vds_reversemax_belowvth = '0.25'
+pvhv_reverse_vtx = '-1.496'
****If running transient for less than 30ns, specify this analaysis to avoid false flags: .checksoa tran
+nvhv_reverse_tmax = '30n'
+pvhv_reverse_tmax = '30n'
****
.SETSOA LABEL="MODEL_OOB_VDS_REVERSE_1: nvhv Vds is negative, nvhv not allowed in Reverse Mode beyond 500mV" E SUBCKT = nvhv v(d,s) = (nvhv_vds_reversemin, *, nvhv_reverse_tmax)
******pvhv Reverse check
.SETSOA LABEL="MODEL_OOB_VDS_REVERSE_1: pvhv Vds is positive, not allowed in Reverse Mode above 500mV when Vgd is above Vth" E SUBCKT = pvhv IF ((v(d,s) > 0) && (v(g,d) < pvhv_reverse_vtx )) THEN v(d,s)=(*, pvhv_vds_reversemax_abovevth, pvhv_reverse_tmax) ENDIF
.SETSOA LABEL="MODEL_OOB_VDS_REVERSE_2: pvhv Vds is positive, not allowed in Reverse Mode above 0mV when Vgd is below Vth" E SUBCKT = pvhv IF ((v(d,s) > 0) && (v(g,d) >= pvhv_reverse_vtx )) THEN v(d,s)=(*, pvhv_vds_reversemax_belowvth, pvhv_reverse_tmax) ENDIF
**************************************************************************************
*** DNWDIODE_PW Checks to avoid parasitic PNP turn on (MRS#2899) *********************
**************************************************************************************
.param
+ soa_temp = temper      $ temerature in oC passed from eldo *.temp statements
+ diode_abs_voltage = '-8.067e-7*soa_temp^2-2.491e-3*soa_temp+0.5054'
+ diode_tmax = '100.001n'
***
.SETSOA LABEL="DIODE Vj SOA VIOLATION TEMPERATURE"  M dnwdiode_pw VDIP=(*, diode_abs_voltage, diode_tmax)
**************************************************************************************
******************************************
********Diode Breakdown and FWD Voltages**
******************************************
* S8 DIODE SOA
.param
+diode_fwd_vt =  0.5
+diode_tmax   = 1p
*****************************************************************************
*** dnwdiode_psub OOB
.param
+dnwdiode_psub_vj_bkdn  = -16.95
+dnwdiode_psub_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_psub VDIP = (dnwdiode_psub_vj_bkdn, dnwdiode_psub_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwdiode_pvhv OOB
.param
+dnwdiode_pvhv_vj_bkdn  = -17.95
+dnwdiode_pvhv_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_pvhv VDIP = (dnwdiode_pvhv_vj_bkdn, dnwdiode_pvhv_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwdiode_pw OOB
.param
+dnwdiode_pw_vj_bkdn  = -16.38
+dnwdiode_pw_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_pw VDIP = (dnwdiode_pw_vj_bkdn, dnwdiode_pw_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** ndiode OOB
.param
+ndiode_vj_bkdn  = -11.7
+ndiode_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M ndiode VDIP = (ndiode_vj_bkdn, ndiode_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** ndiode_h OOB
.param
+ndiode_h_vj_bkdn  = -12.636
+ndiode_h_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M ndiode_h VDIP = (ndiode_h_vj_bkdn, ndiode_h_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** ndiode_lvt OOB
.param
+ndiode_lvt_vj_bkdn  = -11.9
+ndiode_lvt_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M ndiode_lvt VDIP = (ndiode_lvt_vj_bkdn, ndiode_lvt_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** ndiode_native OOB
.param
+ndiode_native_vj_bkdn  = -12.69
+ndiode_native_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M ndiode_native VDIP = (ndiode_native_vj_bkdn, ndiode_native_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** ndiode_nvs OOB
.param
+ndiode_nvs_vj_bkdn  = -11.4
+ndiode_nvs_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M ndiode_nvs VDIP = (ndiode_nvs_vj_bkdn, ndiode_nvs_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** nwdiode OOB
.param
+nwdiode_vj_bkdn  = -16.848
+nwdiode_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M nwdiode VDIP = (nwdiode_vj_bkdn, nwdiode_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** pdiode OOB
.param
+pdiode_vj_bkdn  = -12.69
+pdiode_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M pdiode VDIP = (pdiode_vj_bkdn, pdiode_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** pdiode_h OOB
.param
+pdiode_h_vj_bkdn  = -12.69
+pdiode_h_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M pdiode_h VDIP = (pdiode_h_vj_bkdn, pdiode_h_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** pdiode_hvt OOB
.param
+pdiode_hvt_vj_bkdn  = -12.8
+pdiode_hvt_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M pdiode_hvt VDIP = (pdiode_hvt_vj_bkdn, pdiode_hvt_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** pdiode_lvt OOB
.param
+pdiode_lvt_vj_bkdn  = -12.69
+pdiode_lvt_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M pdiode_lvt VDIP = (pdiode_lvt_vj_bkdn, pdiode_lvt_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwdiode_p20vhv1 OOB
.param
+dnwdiode_p20vhv1_vj_bkdn  = -28.0
+dnwdiode_p20vhv1_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_p20vhv1 VDIP = (dnwdiode_p20vhv1_vj_bkdn, dnwdiode_p20vhv1_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwdiode_psub_defet OOB
.param
+dnwdiode_psub_defet_vj_bkdn  = -40.0
+dnwdiode_psub_defet_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_psub_defet VDIP = (dnwdiode_psub_defet_vj_bkdn, dnwdiode_psub_defet_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwdiode_psub_n20zvtvh1defet OOB
.param
+dnwdiode_psub_n20zvtvh1defet_vj_bkdn  = -40.0
+dnwdiode_psub_n20zvtvh1defet_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_psub_n20zvtvh1defet VDIP = (dnwdiode_psub_n20zvtvh1defet_vj_bkdn, dnwdiode_psub_n20zvtvh1defet_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwdiode_pw_defet OOB
.param
+dnwdiode_pw_defet_vj_bkdn  = -26.0
+dnwdiode_pw_defet_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwdiode_pw_defet VDIP = (dnwdiode_pw_defet_vj_bkdn, dnwdiode_pw_defet_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** dnwhvdiode_psub OOB
.param
+dnwhvdiode_psub_vj_bkdn  = -43.5
+dnwhvdiode_psub_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M dnwhvdiode_psub VDIP = (dnwhvdiode_psub_vj_bkdn, dnwhvdiode_psub_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** ndiode_defet OOB
.param
+ndiode_defet_vj_bkdn  = -11.7
+ndiode_defet_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M ndiode_defet VDIP = (ndiode_defet_vj_bkdn, ndiode_defet_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xdnwdiode_pwell_rf OOB
.param
+xdnwdiode_pwell_rf_vj_bkdn  = -16.38
+xdnwdiode_pwell_rf_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M xdnwdiode_pwell_rf VDIP = (xdnwdiode_pwell_rf_vj_bkdn, xdnwdiode_pwell_rf_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_ndiode_h_dnwl_100 OOB
.param
+xesd_ndiode_h_dnwl_100_vj_bkdn = -16.38
+xesd_ndiode_h_dnwl_100_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_ndiode_h_dnwl_100  v(c0, c1) = (xesd_ndiode_h_dnwl_100_vj_bkdn, xesd_ndiode_h_dnwl_100_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_ndiode_h_dnwl_200 OOB
.param
+xesd_ndiode_h_dnwl_200_vj_bkdn = -16.38
+xesd_ndiode_h_dnwl_200_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_ndiode_h_dnwl_200  v(c0, c1) = (xesd_ndiode_h_dnwl_200_vj_bkdn, xesd_ndiode_h_dnwl_200_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_ndiode_h_dnwl_300 OOB
.param
+xesd_ndiode_h_dnwl_300_vj_bkdn = -16.38
+xesd_ndiode_h_dnwl_300_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_ndiode_h_dnwl_300  v(c0, c1) = (xesd_ndiode_h_dnwl_300_vj_bkdn, xesd_ndiode_h_dnwl_300_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_ndiode_h_100 OOB
.param
+xesd_ndiode_h_100_vj_bkdn = -12.636
+xesd_ndiode_h_100_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_ndiode_h_100  v(c0, c1) = (xesd_ndiode_h_100_vj_bkdn, xesd_ndiode_h_100_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_ndiode_h_200 OOB
.param
+xesd_ndiode_h_200_vj_bkdn = -12.636
+xesd_ndiode_h_200_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_ndiode_h_200  v(c0, c1) = (xesd_ndiode_h_200_vj_bkdn, xesd_ndiode_h_200_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_ndiode_h_300 OOB
.param
+xesd_ndiode_h_300_vj_bkdn = -12.636
+xesd_ndiode_h_300_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_ndiode_h_300  v(c0, c1) = (xesd_ndiode_h_300_vj_bkdn, xesd_ndiode_h_300_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xnwdiode_rf OOB
.param
+xnwdiode_rf_vj_bkdn  = -16.848
+xnwdiode_rf_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" M xnwdiode_rf VDIP = (xnwdiode_rf_vj_bkdn, xnwdiode_rf_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_pdiode_h_100 OOB
.param
+xesd_pdiode_h_100_vj_bkdn = -12.69
+xesd_pdiode_h_100_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_pdiode_h_100  v(c0, c1) = (xesd_pdiode_h_100_vj_bkdn, xesd_pdiode_h_100_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_pdiode_h_200 OOB
.param
+xesd_pdiode_h_200_vj_bkdn = -12.69
+xesd_pdiode_h_200_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_pdiode_h_200  v(c0, c1) = (xesd_pdiode_h_200_vj_bkdn, xesd_pdiode_h_200_fwd_max, diode_tmax)
*****************************************************************************
*****************************************************************************
*** xesd_pdiode_h_300 OOB
.param
+xesd_pdiode_h_300_vj_bkdn = -12.69
+xesd_pdiode_h_300_fwd_max = 'diode_fwd_vt'
*** 
.SETSOA LABEL="OOB_DIODE_Vj" E SUBCKT = xesd_pdiode_h_300  v(c0, c1) = (xesd_pdiode_h_300_vj_bkdn, xesd_pdiode_h_300_fwd_max, diode_tmax)
*****************************************************************************
