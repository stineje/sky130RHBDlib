#!/bin/bash
mkdir -p cells/pcells

cp -rf ../magic/*.mag cells/
cp -rf ../magic/pcells/* cells/pcells/

if [ $# -gt 0 ]
then
    FILES="cells/${1}.mag"
    echo "Extracting 1 layout: $FILES"
else
    FILES=$(ls cells/*.mag)
    echo "Extracting VARIANT layouts:\n $FILES"
    echo '# Standard Cell LEF generated in Magic' > tmp.lef
fi

PCELLS=$(ls cells/pcells/*.mag)

for i in ${PCELLS}; do
    sed -i 's/rlabel polycont\|rlabel poly\|rlabel viali\|rlabel nsubdiffcont\|rlabel psubdiffcont/rlabel locali/g' $i
    sed -i 's/rlabel locali/rlabel metal1/g' $i
    sed -i '/^port.*$/d' $i
    sed -i '/rlabel.*/a port SEDTMP n' $i
    sed -i '/vdd$/{$!{N;s/vdd\nport.*/vdd/g;tl;P;D;:l}}' $i
    sed -i '/gnd$/{$!{N;s/gnd\nport.*/gnd/g;tl;P;D;:l}}' $i
    sed -i -r ':a;/SEDTMP/{x;:b;s/9(_*)$/_\1/;tb;s/^(_*)$/0\1/;s/$/:0123456789/;s/([^_])(_*):.*\1(.).*/\3\2/;s/_/0/g;x;G;s/SEDTMP(.*)\n(.*)/\2\1/;ta}' $i
    sed -i 's/\(^.*locali\|^.*metal1\|^.*cont\|^.*viali\) \(.* gnd\|.* vdd$\)/rlabel locali \2/g' $i
    awk '!(seen[$0]++ && (/gnd/ || /vdd/))' $i > tmp.sim && mv tmp.sim $i
done

for i in ${FILES}; do
    echo "FILE PATH = $i"
    export CELLNAME="$(basename $i .mag)"
    echo "CELLNAME=$CELLNAME"
    sed -i 's/rlabel polycont\|rlabel poly\|rlabel viali\|rlabel nsubdiffcont\|rlabel psubdiffcont/rlabel locali/g' $i
    sed -i 's/rlabel locali/rlabel metal1/g' $i
    sed -i '/^port.*$/d' $i
    sed -i '/rlabel.*/a port SEDTMP n' $i
    sed -i '/vdd$/{$!{N;s/vdd\nport.*/vdd/g;tl;P;D;:l}}' $i
    sed -i '/gnd$/{$!{N;s/gnd\nport.*/gnd/g;tl;P;D;:l}}' $i
    sed -i -r ':a;/SEDTMP/{x;:b;s/9(_*)$/_\1/;tb;s/^(_*)$/0\1/;s/$/:0123456789/;s/([^_])(_*):.*\1(.).*/\3\2/;s/_/0/g;x;G;s/SEDTMP(.*)\n(.*)/\2\1/;ta}' $i
    sed -i 's/\(^.*locali\|^.*metal1\|^.*cont\|^.*viali\) \(.* gnd\|.* vdd$\)/rlabel locali \2/g' $i
    awk '!(seen[$0]++ && (/gnd/ || /vdd/))' $i > tmp.sim && mv tmp.sim $i

    ### Generate GDS and LEF 
    echo "gds; lef write" | magic -dnull -noconsole cells/${CELLNAME}.mag
    echo "extract; ext2spice scale off; ext2spice -m" | magic -dnull -noconsole cells/${CELLNAME}.mag

    ### Move cell to a temp mag file
    #mv $i cells/tmp.mag
    
    ### Flatten temp cell and save back to CELLNAME.mag
    #echo "source magic_flatten.tcl" | magic -dnull -noconsole cells/tmp.mag

    ### Extract .ext from mag file. This generates an .ext and .res.ext which 
    ### need to be combined to extract spice that includes resistances and capacitances
    #echo "source magic_sim_extract.tcl" | magic -dnull -noconsole ${CELLNAME}.mag

    ### Extract resistance info from mag.
    #echo "source magic_res_extract.tcl" | magic -dnull -noconsole ${CELLNAME}.mag
    #cat ${CELLNAME}.ext ${CELLNAME}.res.ext > ${CELLNAME}.full.ext
    #ext2sim -R -t! -t\# ${CELLNAME}.full.ext

    #### Extract the spice
    #echo "source magic_spice_extract.tcl" | magic -dnull -noconsole ${CELLNAME}.mag


    ### Concatenate the cells LEF to the tmp.lef
    cat ${CELLNAME}.lef >> tmp.lef

    ### Clean up
    mv ${CELLNAME}.spice ../spice/
    mv ${CELLNAME}.gds ../gds/
    mv cells/${CELLNAME}.ext ../magic/extraction/ext/
    #mv ${CELLNAME}.res.ext ../magic/extraction/ext/
    #mv ${CELLNAME}.nodes ../magic/extraction/nodes/
    #mv ${CELLNAME}.sim ../magic/extraction/sim/
    #mv ${CELLNAME}.full.sim ../magic/extraction/sim/
done


### After all cell LEFs have been added to tmp.LEF, remove
### all redundant header info, then define it once at the top
./sedLEF.sh
echo 'VERSION 5.7 ;' >> sky130_fd_sc_rh.lef
echo '  NOWIREEXTENSIONATPIN ON ;' >> sky130_fd_sc_rh.lef
echo '  DIVIDERCHAR "/" ;' >> sky130_fd_sc_rh.lef
echo '  BUSBITCHARS "[]" ;' >> sky130_fd_sc_rh.lef
cat tmp.lef >> sky130_fd_sc_rh.lef
echo 'END LIBRARY' >> sky130_fd_sc_rh.lef
cp sky130_fd_sc_rh.lef ../lef/
rm *.lef
rm -rf cells/*

### Units in SPICE generate in absolute terms, so replace them with
### the units in micron. The widths can also generate incorrectly,
### so fix them manually.
./sedSpice.sh
